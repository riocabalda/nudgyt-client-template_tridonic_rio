;(() => {
  var e
  function t(t) {
    clearTimeout(e),
      (e = setTimeout(function () {
        H()
      }, 500))
  }
  var n = void 0
  function o(e) {
    if ((clearTimeout(n), Ut && Ut.readyState === Ht)) {
      if (
        (console.log('xirsys ws.send(): ' + JSON.stringify(e)), Ut.send(e), !Jt)
      ) {
        var t = e,
          i = JSON.parse(t),
          a = JSON.parse(i.responseText)
        console.log('client xirsysResponse obj:  ' + JSON.stringify(a))
        var l = {
          iceServers: [
            {
              username: a.v.iceServers.username,
              credential: a.v.iceServers.credential,
              urls: a.v.iceServers.urls
            }
          ]
        }
        console.log(
          'client xirysGeoLocationBasedTurnSever :  ' + JSON.stringify(l)
        ),
          Jt || (Jt = new pn({ peerConnectionOptions: l })),
          Ot || (Ot = document.createElement('Audio'))
      }
    } else
      n = setTimeout(function () {
        o(e)
      }, 1e3)
  }
  var i = void 0,
    a = void 0
  function l() {
    ;(a.value = ''), (a.style.display = 'none'), a.blur()
  }
  function s(e) {
    console.log(e),
      'Enter' == e.key &&
        (console.log('11111111111111 submit'),
        i.classList.add('hiddenState'),
        E({ CMD: 'TextCommitedForWidget', value: a.value }),
        l())
  }
  function r() {
    ;(a.style.width = 2 + a.value.length + 'ch'),
      console.log('onchangehiddenInputText : ' + a.style.width)
  }
  function c(e) {
    return (e >= 112 && e <= 123) || 9 === e
  }
  new Map(),
    setInterval(function () {
      a && console.log('1111  hiddenInput.style.display : ' + a.style.display)
    }, 1e3)
  function d(e) {
    return 16 === e.keyCode && 'ShiftRight' === e.code
      ? 253
      : 17 === e.keyCode && 'ControlRight' === e.code
        ? 254
        : 18 === e.keyCode && 'AltRight' === e.code
          ? 255
          : e.keyCode
  }
  function u() {
    var e = document.getElementById('streamingVideo')
    if (e) {
      var t = document.getElementById('AudioBtnImg')
      t &&
        ((t.src = e.muted
          ? 'assets/images/mute.svg'
          : 'assets/images/unmute.svg'),
        console.log(t.src))
    }
  }
  function g(e) {
    console.log('setVolume val: ' + e)
    var t = document.getElementById('streamingVideo')
    ;(t.volume = e),
      console.log('streamingVideo.volume: ' + t.volume),
      Ot || (Ot = document.getElementById('Audio')),
      (Ot.volume = e),
      console.log('audioElem.volume: ' + Ot.volume)
  }
  function m() {
    if (Dt) {
      console.log('11111111111111 unMuteAudio4AutoPlay')
      var e = document.getElementById('streamingVideo')
      e &&
        e.muted &&
        ((Dt = !1),
        (function (e) {
          var t = document.getElementById('streamingVideo')
          if (
            (ze(t, e),
            console.log('streamingVideo.muted: ' + t.muted),
            Ot || (Ot = document.getElementById('Audio')),
            Ot && (ze(Ot, e), console.log('audioElem2.muted: ' + Ot.muted)),
            !e && (Ot || (Ot = document.createElement('Audio')), Ot))
          ) {
            ;(Ot.autoplay = !0), null != Mt && (Ot.srcObject = Mt)
            var n = Ot.play()
            void 0 !== n &&
              n
                .then(() => {
                  console.log(
                    'switchAudioTo() Created new audio element to play seperate audio stream.'
                  )
                })
                .catch((e) => {
                  console.warn(
                    'Autoplay  audio was prevented.deleting audioElem '
                  ),
                    delete Ot
                })
          }
          console.log('11111111111111 streamingVideo.muted =' + t.muted), u()
        })(!document.getElementById('streamingVideo').muted))
    }
  }
  function p(e) {
    window.top.postMessage(e, '*')
  }
  function f(e) {
    if (
      (console.log(' handleUnrealResponse(descriptor) : ' + e),
      'function' == typeof onResponseFromUnreal
        ? onResponseFromUnreal(e)
        : console.log('not found onResponseFromUnreal'),
      e3ds_controller.callbacks &&
      'function' == typeof e3ds_controller.callbacks.onResponseFromUnreal
        ? e3ds_controller.callbacks.onResponseFromUnreal(e)
        : console.log(
            'not found e3ds_controller.callbacks.onResponseFromUnreal'
          ),
      window.top.postMessage(e, '*'),
      'getCmdLineArgs' === e)
    ) {
      let e = {}
      ;(e.cmdLineArgs = jt),
        console.log(
          '33333333333333 sendDataToUE4App emitUIInteraction: ' +
            JSON.stringify(e)
        ),
        E(e)
    } else {
      let t
      try {
        ;(t = JSON.parse(e)),
          console.log(
            '5555555555555 handleUnrealResponse JSON.stringify(JSON.parse(descriptor)) : ' +
              JSON.stringify(t)
          )
      } catch (e) {
        console.log('5555555555555 handleUnrealResponse JSON.parse fails')
      }
      !(function (e) {
        if (
          (console.log(
            '5555555555555 ahsanHandleResponseFunction(obj) :' +
              JSON.stringify(e)
          ),
          null != e)
        )
          switch (
            (console.log(
              '5555555555555 ahsanHandleResponseFunction obj.cmd :' + e.cmd
            ),
            e.cmd)
          ) {
            case 'misctasks':
              H()
              break
            case 'takeFocusedWidgetText_old':
              y && ((y = !1), r(), e.value)
              break
            case 'takeFocusedWidgetText':
              y &&
                ((y = !1),
                (a.value = e.value),
                (a.style.display = 'block'),
                r(),
                a.focus())
              break
            case 'getCmdLineArgs':
              {
                let e = {}
                ;(e.cmdLineArgs = jt),
                  console.log(
                    '33333333333333 sendDataToUE4App emitUIInteraction: ' +
                      JSON.stringify(e)
                  ),
                  E(e)
              }
              break
            case 'getIpaddress':
              {
                let e = { Ipaddress: 'contactAhsanASAP' }
                console.log(
                  '33333333333333 sendDataToUE4App emitUIInteraction: ' +
                    JSON.stringify(e)
                ),
                  E(e)
              }
              break
            case 'redirectTo':
              window.location.href = e.value
              break
            case 'lunchKeyBoard':
              if (e.isFoused) {
                var t = document.getElementById('textaaa')
                t || showError('elem is null'),
                  ShowOverlayAhsan(),
                  (t.value = e.currentText),
                  t.focus()
              } else console.log('not isFoused')
              break
            case 'sendLocalFileToUE4':
              !(function (e) {
                console.log('Browsing')
                const t = document.createElement('input')
                t.setAttribute('type', 'file'),
                  (t.style.display = 'none'),
                  document.getElementsByTagName('body')[0].appendChild(t),
                  t.addEventListener('change', () => {
                    const n = t.files[0]
                    var o, i
                    console.log('file', n),
                      ((o = n.type),
                      (i = n.name),
                      fetch(
                        `https://l2su2tcf2a.execute-api.us-east-1.amazonaws.com/default/s3-upload-from-ss?content_type=${o}&file_name=${i}&folder=folderName`,
                        { method: 'GET' }
                      )
                        .then((e) => e.json())
                        .then((e) => JSON.parse(e.result.body).uploadURL)
                        .catch((e) => {
                          console.error('Failed to retrieve upload URL')
                        })).then((t) => {
                        !(function (e, t, n, o) {
                          let i = new XMLHttpRequest()
                          i.open('PUT', e, !0),
                            i.setRequestHeader('Content-type', t),
                            (i.onload = function () {
                              let t = i.responseText
                              if (4 == i.readyState && '200' == i.status) {
                                console.log('Successfully uploaded', t),
                                  console.log('file:', n),
                                  console.log('DIRECT URL', e.split('?')[0])
                                var a = JSON.stringify({
                                  type: 'askElToDownloadFileTO',
                                  url: e.split('?')[0],
                                  downloadPath: o + n.name
                                })
                                Ut &&
                                  (console.log(
                                    ' ws.send(): ' + JSON.stringify(a)
                                  ),
                                  Ut.send(a))
                              } else console.error(t)
                            }),
                            (i.onprogress = function (e) {
                              console.log('Progress', e)
                            }),
                            i.send(n)
                        })(t, n.type, n, e)
                      })
                  }),
                  t.click()
              })(e.pathToSaveFile)
              break
            case 'ToggleBrowserMouse':
              ;(St = !St), Ft()
              break
            case 'showBrowserMouse':
              ;(St = !0), Ft()
              break
            case 'hideBrowserMouse':
              ;(St = !1), Ft()
              break
            case 'lunchCallApp':
              console.log(e.value), window.open('tel:' + e.value, '_self')
              break
            case 'lunchMailApp':
              var n =
                'mailto:' + e.value + '?subject=' + e.value + '&body=' + e.value
              window.open(n, '_blank')
              break
            case 'sendDeviceInfo':
              E({ userDeviceInfo: zt })
              break
            case 'sendUserInfoInPlainJson':
              let i = {}
              ;(i = wt), E(i)
              break
            case 'sendUserInfo':
              E({ clientInfo: wt })
              break
            case 'generateDownloadableCSV':
              console.log(JSON.stringify(e.value)),
                (function (e, t) {
                  for (
                    var n = function (e) {
                        for (var t = '', n = 0; n < e.length; n++) {
                          var o = null === e[n] ? '' : e[n].toString()
                          e[n] instanceof Date && (o = e[n].toLocaleString())
                          var i = o.replace(/"/g, '""')
                          i.search(/("|,|\n)/g) >= 0 && (i = '"' + i + '"'),
                            n > 0 && (t += ','),
                            (t += i)
                        }
                        return t + '\n'
                      },
                      o = '',
                      i = 0;
                    i < t.length;
                    i++
                  )
                    o += n(t[i])
                  console.log('5555555555555 csvFile content :' + o),
                    console.log('5555555555555 csvFile filename :' + e)
                  var a = new Blob([o], { type: 'text/csv;charset=utf-8;' })
                  if (navigator.msSaveBlob) navigator.msSaveBlob(a, e)
                  else {
                    var l = document.createElement('a')
                    if (void 0 !== l.download) {
                      var s = URL.createObjectURL(a)
                      l.setAttribute('href', s),
                        l.setAttribute('download', e),
                        (l.style.display = 'none'),
                        document.body.appendChild(l),
                        l.click(),
                        document.body.removeChild(l)
                    }
                  }
                })(e.filename, e.csvRows)
              break
            case 'captureScreenShot':
              kn()
              break
            case 'toggleFullscreen':
              Sn()
              break
            case 'enterFullscreen':
              wn()
              break
            case 'exitFullscreen':
              bn()
              break
            case 'ForeceEndTab':
              window.close()
              break
            case 'ForeceEndSession':
              console.log('ForeceEndSession diderrorhappend:', Me),
                Me
                  ? console.log(' no error')
                  : (window.location = '/assets/pages/SessionEnded.htm')
              break
            case 'setVolume':
              console.log(e.value), g(e.value)
              break
            case 'askChatGpt':
              !(async function (e) {
                var t
                ;(t = {
                  prompt: e,
                  max_tokens: 100,
                  temperature: 0.7,
                  model: 'text-davinci-003'
                }),
                  await fetch('https://api.openai.com/v1/completions', {
                    method: 'POST',
                    headers: {
                      'Content-Type': 'application/json',
                      Authorization:
                        'Bearer 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'
                    },
                    body: JSON.stringify(t)
                  })
                    .then((e) => e.json())
                    .then((t) => {
                      var n
                      console.log(t),
                        (n =
                          null != t.error
                            ? t.error.message
                            : t.choices[0].text.trim()),
                        console.log('ChatGpt question -> ' + e),
                        console.log('ChatGpt answer-> ' + n),
                        E({ ChatGptQuestion: e, ChatGptAnswer: n })
                    })
                    .catch((e) => {
                      console.error(e)
                    })
              })(e.value)
              break
            case 'doInAppPurchase':
              !(function (e) {
                var t =
                    'https://' +
                    lo.domain +
                    ':' +
                    lo.httpsPort +
                    '/inAppPurchaseResult/',
                  n = {
                    owner: Se,
                    currency: 'USD',
                    amount: e.value,
                    reportingUrl: t,
                    shouldSignupUser: !1,
                    initiatedBy: 'unrealApp',
                    isOneTimeUrl: !1
                  },
                  o = JSON.stringify(n)
                console.log('doenecrytion fsfsf: ' + o), x(o)
              })(e)
              break
            case 'sendClipBoardData':
              O()
              break
            case 'lunchUrl':
              console.log(e.value), window.open(e.value, '_blank')
              break
            case 'downloadLocalFileOnUserDevice':
              var o = JSON.stringify({ type: 'forwardToEL', objFromUE4: e })
              Ut &&
                (console.log(' ws.send(): ' + JSON.stringify(o)), Ut.send(o))
          }
      })(t)
    }
  }
  document.addEventListener('keypress', function (e) {
    m()
    const t = e.which || e.code
    let n = e.key
    n || (n = String.fromCharCode(t))
  }),
    p({ type: 'stage3_slotOccupied' })
  var y = !1
  function v() {
    D(new Uint8Array([w.RequestQualityControl]).buffer)
  }
  function h(e, t) {
    var n = { ConsoleCommand: 'r.setRes ' + e + 'x' + t }
    1 == Ge && console.log(n), T(n)
  }
  function S(e) {
    null !== e.PrioritiseQuality &&
      E({ Console: 'Streamer.PrioritiseQuality ' + e.PrioritiseQuality }),
      null !== e.LowBitrate &&
        E({ Console: 'Streamer.LowBitrate ' + e.LowBitrate }),
      null !== e.HighBitrate &&
        E({ Console: 'Streamer.HighBitrate ' + e.HighBitrate }),
      null !== e.MinFPS && E({ Console: 'Streamer.MinFPS ' + e.MinFPS })
  }
  const w = {
    IFrameRequest: 0,
    RequestQualityControl: 1,
    MaxFpsRequest: 2,
    AverageBitrateRequest: 3,
    StartStreaming: 4,
    StopStreaming: 5,
    LatencyTest: 6,
    RequestInitialSettings: 7,
    UIInteraction: 50,
    Command: 51,
    KeyDown: 60,
    KeyUp: 61,
    KeyPress: 62,
    MouseEnter: 70,
    MouseLeave: 71,
    MouseDown: 72,
    MouseUp: 73,
    MouseMove: 74,
    MouseWheel: 75,
    TouchStart: 80,
    TouchEnd: 81,
    TouchMove: 82,
    GamepadButtonPressed: 90,
    GamepadButtonReleased: 91,
    GamepadAnalog: 92
  }
  function b(e, t) {
    let n = JSON.stringify(t)
    1 == Ge && console.log('33333333333333 descriptorAsString: ' + n)
    let o = new DataView(new ArrayBuffer(3 + 2 * n.length)),
      i = 0
    o.setUint8(i, e), i++, o.setUint16(i, n.length, !0), (i += 2)
    for (let e = 0; e < n.length; e++)
      o.setUint16(i, n.charCodeAt(e), !0), (i += 2)
    D(o.buffer)
  }
  function E(e) {
    b(w.UIInteraction, e)
  }
  function T(e) {
    b(w.Command, e)
  }
  function k(e) {
    console.log('receiveCommand: ' + JSON.stringify(e))
    try {
      const t = JSON.parse(e.data)
      null != t.Type
        ? (console.log('Command received, parsed and accepted: %s', e.data),
          E(t))
        : 'EmulatePlayButtonPressed' == t.cmd
          ? _n()
          : 'sendToUe4' == t.cmd
            ? E(t.value)
            : 'ssitest' == t.cmd
              ? E({ requestId: t.requestId, jsonObjecived: JSON.stringify(t) })
              : console.log(
                  'Command received and parsed, but not accepted: %s',
                  e.data
                )
    } catch (t) {
      console.log(
        'error receiveCommand(): Command received, but could not parse: ' +
          JSON.stringify(e.data)
      )
    }
  }
  'undefined' != typeof e3ds_controller &&
    (e3ds_controller.sendToUnreal = function (e) {
      E(e)
    })
  var B = 0,
    I = void 0
  function C(e) {}
  function x(e) {
    B++, console.log('--\x3e collectLocationInfoAttempt: ' + B)
    var t =
        'https://account.eagle3dstreaming.com/api/v1/encrypt-string?decryptedString=' +
        e,
      n = new XMLHttpRequest()
    ;(n.isDOne = !1),
      (n.onreadystatechange = function () {
        if (
          (console.log(
            'doenecrytion()  xmlHttp.responseText: ' + n.responseText
          ),
          429 == n.status)
        )
          return null != I && clearTimeout(I), void (I = setTimeout(x, 2e3))
        if (422 != n.status)
          if (
            '' != n.responseText &&
            null != n.responseText &&
            200 == n.status
          ) {
            if (n.isDOne) return
            ;(n.isDOne = !0), clearTimeout(I), C(n.responseText)
            var e =
              'https://payment.eaglepixelstreaming.com/v1/?key=' +
              n.responseText
            console.log('doenecrytion: ' + e), window.open(e, '_blank')
          } else null != I && clearTimeout(I)
      }),
      n.open('GET', t, !0)
    try {
      n.send(null)
    } catch (e) {
      console.log('XXXXXXXXXXXXXXXXXXX doenecrytion try catch error : '),
        console.log(e)
    }
  }
  function O() {
    document.hasFocus()
      ? window.navigator.clipboard
          .readText()
          .then((e) => {
            if (
              (console.log('sendClipBoardData: ' + e),
              Ut && Ut.readyState === Ht)
            ) {
              var t = {
                type: 'setclipboardDataOnStreamerMachine',
                textToSetclipboardData: e
              }
              ;(t = JSON.stringify(t)),
                console.log(
                  'setclipboardDataOnStreamerMachine ws.send(): ' + t
                ),
                Ut.send(t)
            }
            E({ ClipBoardData: e })
          })
          .catch((e) => {
            console.error('Failed to read clipboard data: ', e)
          })
      : console.log('sendClipBoardData: Page is not in focus')
  }
  function M() {
    Jt
      ? (console.log('Creating offer'),
        Ln('Starting connection to server, please wait'),
        ae(5),
        Jt.createOffer(),
        clearTimeout(undefined))
      : (console.log('WebRTC player not setup, cannot create offer'),
        Wn('Unable to setup video'))
  }
  function D(e) {
    Pe || mt || (Jt && (Z(e), Jt.send(e)))
  }
  const P = {
    QualityControlOwnership: 0,
    Response: 1,
    Command: 2,
    FreezeFrame: 3,
    UnfreezeFrame: 4,
    VideoEncoderAvgQP: 5,
    LatencyTest: 6,
    InitialSettings: 7
  }
  var R,
    A,
    N,
    L,
    F = 'N/A',
    _ = 1,
    U = !1
  function J(e) {
    U = !0
    var t = window.webRtcPlayerObj.pcClient
    if (
      (1 == _ &&
        ((U = !0),
        console.log('NNNN restartWebRtc step:' + _),
        navigator.userAgent.includes('Chrome')
          ? t
              .createOffer()
              .then(
                (e) => (
                  (function (e) {
                    e.onicecandidate = (e) => {
                      e.candidate
                        ? Ut &&
                          Ut.readyState === Ht &&
                          (console.log('-> SS: iceCandidate'),
                          Ut.send(
                            JSON.stringify({
                              type: 'iceCandidate',
                              candidate: e.candidate
                            })
                          ))
                        : console.log('ICE gathering complete')
                    }
                  })(t),
                  t.setLocalDescription(e)
                )
              )
              .then(() => {
                if (Ut && Ut.readyState === Ht) {
                  let e = JSON.stringify(t.localDescription)
                  console.log(`-> SS: offer:\n${e}`), Ut.send(e)
                }
              })
              .catch((e) => {
                console.error('Error creating offer:', e)
              })
          : console.log(
              'Negotiation restart is not supported in this browser.'
            )),
      2 == _)
    ) {
      console.log('NNNN restartWebRtc step:' + _)
      var n = new RTCSessionDescription(e)
      t.setRemoteDescription(n)
        .then(() => {
          console.log('Remote description set successfully'), (_ = 3), J(e)
        })
        .catch((e) => {
          console.error('Error setting remote description:', e)
        })
    }
    3 == _ && console.log('NNNN restartWebRtc step:' + _)
  }
  function W(e) {
    console.log('------------resizePlayerStyle2'), H()
  }
  function H(e) {
    var t = document.getElementById('player')
    t &&
      (pe && V(),
      t.classList.contains('fixed-size') ||
        ((function (e) {
          let t = e.getElementsByTagName('VIDEO'),
            n = window.innerHeight / window.innerWidth,
            o = e.clientHeight / e.clientWidth,
            i = t.videoHeight / t.videoWidth
          var a
          isNaN(i)
            ? ((R = window.innerWidth),
              (A = window.innerHeight),
              (a =
                'top: ' +
                (N = 0) +
                'px; left: ' +
                (L = 0) +
                'px; width: ' +
                R +
                'px; height: ' +
                A +
                'px; cursor: ' +
                kt +
                '; ' +
                Tt))
            : n < o
              ? ((R = Math.floor(window.innerHeight / i)),
                (A = window.innerHeight),
                (N = 0),
                (L = Math.floor(0.5 * (window.innerWidth - R))),
                (a =
                  'top: ' +
                  N +
                  'px; left: ' +
                  L +
                  'px; width: ' +
                  R +
                  'px; height: ' +
                  A +
                  'px; cursor: ' +
                  kt +
                  '; ' +
                  Tt))
              : ((R = window.innerWidth),
                (A = Math.floor(window.innerWidth * i)),
                (a =
                  'top: ' +
                  (N = Math.floor(0.5 * (window.innerHeight - A))) +
                  'px; left: ' +
                  (L = 0) +
                  'px; width: ' +
                  R +
                  'px; height: ' +
                  A +
                  'px; cursor: ' +
                  kt +
                  '; ' +
                  Tt)),
            (function (e, t) {
              if (!(Qe.length > 0) || pe)
                if (2 == fn || null == rt) {
                  ;(e.style = t + ";background-image: 'none';"),
                    document.getElementsByClassName('loader'),
                    document.getElementById('videoPlayOverlay')
                  var n = '#FFFFFFFF'
                  ;(o = document.getElementById('loaderStep1')) &&
                    (o.style.background = n),
                    (o = document.getElementById('loaderStep2')) &&
                      (o.style.background = n),
                    (o = document.getElementById('loaderStep3')) &&
                      (o.style.background = n)
                } else if (null != rt) {
                  var o
                  ;(e.style = t + ';background-image: url(' + rt + ');'),
                    (n = '#FFFFFF00'),
                    ((o =
                      document.getElementById('loaderStep1')).style.background =
                      n),
                    ((o =
                      document.getElementById('loaderStep2')).style.background =
                      n),
                    ((o =
                      document.getElementById('loaderStep3')).style.background =
                      n)
                }
            })(e, a)
        })(t),
        (tn = t.getBoundingClientRect()),
        jn(),
        j()))
  }
  var $ = !0
  function q() {
    if ($) {
      var e = document.getElementById('player')
      e &&
        'Dynamic' == Ce.resolutionType_ue4 &&
        h(e.clientWidth, e.clientHeight)
    }
  }
  function V() {
    if (null == Xt) return q(), void (Xt = new Date().getTime())
    new Date().getTime() - Xt > ke
      ? (q(), (Xt = new Date().getTime()))
      : (console.log('Resizing too often - skipping'),
        clearTimeout(qt),
        (qt = setTimeout(V, ke)))
  }
  var G = {
    receiving: !1,
    size: 0,
    jpeg: void 0,
    height: 0,
    width: 0,
    valid: !1
  }
  function z() {
    G.valid && (Yt.style.display = 'block')
  }
  function j() {
    if (0 !== G.width && 0 !== G.height) {
      let e = 0,
        t = 0,
        n = 0,
        o = 0
      {
        let i = window.innerWidth / window.innerHeight,
          a = G.width / G.height
        i < a
          ? ((e = window.innerWidth),
            (t = Math.floor(window.innerWidth / a)),
            (n = Math.floor(0.5 * (window.innerHeight - t))),
            (o = 0))
          : ((e = Math.floor(window.innerHeight * a)),
            (t = window.innerHeight),
            (n = 0),
            (o = Math.floor(0.5 * (window.innerWidth - e))))
      }
      ;(Yt.style.width = e + 'px'),
        (Yt.style.height = t + 'px'),
        (Yt.style.left = o + 'px'),
        (Yt.style.top = n + 'px')
    }
  }
  var X = {
    enabled: !1,
    warnTimeout: void 0,
    closeTimeout: void 0,
    active: !1,
    overlay: void 0,
    warnTimer: void 0,
    countdown: 0,
    countdownTimer: void 0,
    runningCountdown: !1,
    isAfkUiUp: !1
  }
  function Q() {
    X.overlay &&
      ((document.getElementById('afk-second-text').innerText = X.countdown),
      (X.overlay.style.display = 'block'))
  }
  function Y() {
    ;(X.runningCountdown = !1), clearInterval(X.countdownTimer), K(), (Pe = !1)
  }
  function K() {
    '0' != Ce.isAfkEnabled
      ? ((X.warnTimeout = 60 * Ce.afkWarnTimeout),
        (X.closeTimeout = 60 * Ce.afkCloseTimeout),
        (X.active = !0),
        (X.enabled = !0),
        Z())
      : console.log('AFK is disabled')
  }
  function Z(e) {
    ;(e && 1 === e.byteLength) ||
      (X.active &&
        (clearTimeout(X.warnTimer),
        X.overlay && ((X.overlay.style.display = 'none'), (X.isAfkUiUp = !1)),
        (X.warnTimer = setTimeout(function () {
          console.log('Showing afk overlay'),
            (function () {
              if (X.enabled)
                if (
                  !isNaN(X.countdown) &&
                  X.warnTimeout > 0 &&
                  X.warnTimeout < 1e3
                ) {
                  if (
                    ((X.countdown = X.closeTimeout),
                    (X.isAfkUiUp = !0),
                    (Pe = !0),
                    In.controlScheme == Bn.LockedMouse &&
                      document.exitPointerLock(),
                    clearInterval(X.countdownTimer),
                    (X.countdownTimer = setInterval(function () {
                      X.countdown--,
                        0 == X.countdown
                          ? ((Bt = !0),
                            Ut && Ut.close(),
                            console.log(
                              'You have been disconnected for not being active,please refresh the page '
                            ),
                            an()
                              ? to(
                                  'You have been disconnected for not being active,please refresh the page '
                                )
                              : to(
                                  'You have been disconnected for not being active,to start a new session please visit: ' +
                                    location.href
                                ))
                          : Q()
                    }, 1e3)),
                    X.overlay)
                  )
                    return Q(), void (X.runningCountdown = !0)
                  ;(X.active = !1),
                    (X.overlay = document.getElementById('afkOverlay')),
                    (function (e, t, n) {
                      const o = document.getElementById('player')
                      t && o.appendChild(t),
                        X.overlay &&
                          n &&
                          X.overlay.addEventListener('click', n),
                        o.classList.add('clickableState')
                    })(0, X.overlay, (e) => {
                      Y()
                    })
                } else console.log('AFK ', X.countdown, X.warnTimeout)
              else console.log('Not showing overlay because afk disabled.')
            })()
        }, 1e3 * X.warnTimeout))))
  }
  function ee() {
    Nt < 0 ||
      (clearTimeout(_t),
      (_t = setTimeout(function () {
        if (Zt || zn)
          return (
            ee(),
            void console.log(
              'startExpireOnCountDown--\x3e isAppPreparationprocessGoingOn: ' +
                Zt
            )
          )
        ;(Ke = !1),
          (Ze = !1),
          (ws4queue_shouldTryToReconnect = !1),
          qn && qn.close(),
          Ut && Ut.close(),
          'function' == typeof onSessionExpired
            ? onSessionExpired()
            : e3ds_controller.callbacks &&
                'function' == typeof e3ds_controller.callbacks.onSessionExpired
              ? e3ds_controller.callbacks.onSessionExpired()
              : an()
                ? to('Session expired,please refresh the page ')
                : to(
                    'Session expired,to start a new session please visit: ' +
                      location.href
                  ),
          an()
            ? to('Session expired,please refresh the page ')
            : to(
                'Session expired,to start a new session please visit: ' +
                  location.href
              )
      }, Nt)))
  }
  function te() {
    console.log('111111111111  onFirstHumanInteraction()'),
      Ot &&
        ('success' == Ot.ahsanHack
          ? (window.removeEventListener('touchend', te),
            window.removeEventListener('mouseup', te))
          : ((document.getElementById('streamingVideo').muted = !1),
            Ot ? gn() : at('audioElem not found: ', -937307130),
            console.log(
              '11111111111111 streamingVideo.muted =' + streamingVideo.muted
            ),
            u()))
  }
  function ne() {
    if (oe) {
      if (It)
        document.exitFullscreen
          ? document.exitFullscreen()
          : document.mozCancelFullScreen
            ? document.mozCancelFullScreen()
            : document.webkitExitFullscreen
              ? document.webkitExitFullscreen()
              : document.msExitFullscreen && document.msExitFullscreen(),
          (It = !1)
      else {
        let e = document.documentElement
        e.requestFullscreen
          ? e.requestFullscreen()
          : e.mozRequestFullScreen
            ? e.mozRequestFullScreen()
            : e.webkitRequestFullscreen
              ? e.webkitRequestFullscreen()
              : e.msRequestFullscreen && e.msRequestFullscreen(),
          screen.orientation.lock('landscape'),
          (It = !0)
      }
      clearInterval(Vt), clearTimeout(Gt), (oe = !1)
    }
  }
  Date.now(),
    window.addEventListener('touchend', te),
    window.addEventListener('mouseup', te)
  var oe = !1
  function ie(e, t, n = !0, o, i) {
    if (
      (console.trace(),
      console.log('ForceReloadPageWithproperInfo diderrorhappend:' + Me),
      Ct && (Ct.domainName, Ct.topLevelDomainName),
      window.location.href,
      lo.elInfo.instanceId_exeLuncher,
      lo.elInfo.computerName,
      JSON.stringify(wt),
      JSON.stringify(tt),
      JSON.stringify(zt),
      n && it(e, o),
      i && Ut && Ut.readyState === Ht)
    ) {
      const t = (function () {
        const e = new Date()
        return `${e.getUTCFullYear()}-${String(e.getUTCMonth() + 1).padStart(
          2,
          '0'
        )}-${String(e.getUTCDate()).padStart(2, '0')}T${String(
          e.getUTCHours()
        ).padStart(2, '0')}:${String(e.getUTCMinutes()).padStart(
          2,
          '0'
        )}:${String(e.getUTCSeconds()).padStart(2, '0')}.000Z`
      })()
      var a = {
        href: window.location.href,
        type: i,
        msg: e,
        date: t,
        cirrusServer: lo,
        appName: ut,
        owner: Se,
        clientInfo: wt,
        ue4ExeInfo: tt,
        userDeviceInfo: zt
      }
      Ut.send(JSON.stringify({ type: 'DoFBEntreyofSystemIssue', obj: a })),
        setTimeout(function () {
          ;(Ke = !1),
            Ut &&
              Ut.close(
                1e3,
                'ForceReloadPageWithproperInfo() : ' + e.substring(0, 100)
              )
        }, 1e3)
    } else
      (Ke = !1),
        Ut &&
          Ut.close(
            1e3,
            'ForceReloadPageWithproperInfo() : ' + e.substring(0, 100)
          )
    je(e, { color: 'Red' }),
      setTimeout(function () {
        location.reload()
      }, t)
  }
  function ae(e) {
    if (!(Qe.length > 0)) {
      ;(en += e),
        console.log('LunchingProgressAmount:' + en),
        e3ds_controller.callbacks &&
        'function' ==
          typeof e3ds_controller.callbacks.onReceivingAppStartingProgress
          ? e3ds_controller.callbacks.onReceivingAppStartingProgress(en)
          : console.log(
              'not found e3ds_controller.callbacks.onReceivingAppStartingProgress'
            )
      var t = document.getElementById('LunchingProgress'),
        n = document.getElementById('Title_LunchingProgress')
      Zt || (n && (n.style.display = 'block')),
        null !== t && (Zt || (t && (t.style.display = 'block')), (t.value = en))
    }
  }
  function le(e, t) {
    if (e.username !== t.username || e.credential !== t.credential) return !1
    const n = se(e.urls),
      o = se(t.urls)
    return JSON.stringify(n) === JSON.stringify(o)
  }
  function se(e) {
    return e.slice().sort()
  }
  function re(e) {
    ;(Oe = e),
      console.log(
        'onConfig config.peerConnectionOptions: ' +
          JSON.stringify(e.peerConnectionOptions)
      ),
      ae(5)
    let t = document.getElementById('player')
    if (Jt) {
      console.log(' webRtcPlayerObj.cfg:', Jt.cfg),
        console.log('webRtcPlayerObj.cfg.iceServers:', Jt.cfg.iceServers),
        console.log('config.peerConnectionOptions:', e.peerConnectionOptions),
        console.log(
          'config.peerConnectionOptions.iceServers:',
          e.peerConnectionOptions.iceServers
        ),
        e.peerConnectionOptions.iceServers == Jt.cfg.iceServers &&
          console.log('same')
      const t = (function (e, t) {
        if (e.iceServers.length !== t.iceServers.length) return !1
        for (let n = 0; n < e.iceServers.length; n++)
          if (!le(e.iceServers[n], t.iceServers[n])) return !1
        return !0
      })(e.peerConnectionOptions, Jt.cfg)
      console.log('Are the configurations equal?', t),
        (Jt.cfg = e.peerConnectionOptions)
    } else Jt = new pn({ peerConnectionOptions: e.peerConnectionOptions })
    if (
      (t.appendChild(Jt.video),
      (function (e) {
        e &&
          ((function (e) {
            ;(e.onmouseenter = function (t) {
              if (!mt) {
                Wt && console.log('mouse enter:' + e.id)
                var n = new DataView(new ArrayBuffer(1))
                n.setUint8(0, w.MouseEnter), D(n.buffer), e.pressMouseButtons(t)
              }
            }),
              (e.onmouseleave = function (t) {
                if (!mt) {
                  Wt && console.log('mouse leave: ' + e.id)
                  var n = new DataView(new ArrayBuffer(1))
                  n.setUint8(0, w.MouseLeave),
                    D(n.buffer),
                    e.releaseMouseButtons(t)
                }
              })
          })(e),
          Nn(e))
      })(be),
      1 == vt &&
        (function (e) {
          null === document.getElementById('hiddenInput') &&
            (((a = document.createElement('input')).id = 'hiddenInput'),
            (a.style.width = '150px'),
            (a.style.height = '50px'),
            e.appendChild(a),
            a.addEventListener('keyup', s),
            a.addEventListener('input', r),
            (a.onmouseenter = function (e) {
              console.log('onmouseenter hiddenInput')
            }),
            (a.onmouseleave = function (e) {
              console.log('onmouseleave hiddenInput')
            })),
            null === document.getElementById('editTextButton') &&
              (((i = document.createElement('button')).id = 'editTextButton'),
              (i.innerHTML = 'edit text'),
              e.appendChild(i),
              i.addEventListener('click', function () {
                i.classList.add('hiddenState'),
                  (a.value = ''),
                  (a.style.display = 'block'),
                  a.focus()
              }))
        })(htmlElement),
      Qe.length > 0)
    ) {
      let e = document.getElementById('skip_video')
      null !== e &&
        (e.onclick = function (e) {
          ;(document.getElementById('skip_video').style.display = 'none'), M()
        }),
        (document.getElementById('skip_video').style.display = 'block'),
        null != yt('LoadingScreenSkipButtonText') &&
          '' != yt('LoadingScreenSkipButtonText') &&
          (document.getElementById('skip_video').innerHTML = yt(
            'LoadingScreenSkipButtonText'
          ))
    } else M()
    let n = be
    switch ((H(), In.controlScheme)) {
      case Bn.HoveringMouse:
        !(function (e) {
          ;(kt = 'none'),
            (e.onmousemove = function (e) {
              Cn(e.offsetX, e.offsetY, e.movementX, e.movementY),
                e.preventDefault()
            }),
            (e.onmousedown = function (e) {
              m(), xn(e.button, e.offsetX, e.offsetY), e.preventDefault()
            }),
            (e.onmouseup = function (e) {
              m(), On(e.button, e.offsetX, e.offsetY), e.preventDefault()
            }),
            (e.oncontextmenu = function (e) {
              O(), On(e.button, e.offsetX, e.offsetY), e.preventDefault()
            }),
            'onmousewheel' in e
              ? (e.onmousewheel = function (e) {
                  Mn(e.wheelDelta, e.offsetX, e.offsetY), e.preventDefault()
                })
              : e.addEventListener(
                  'DOMMouseScroll',
                  function (e) {
                    Mn(-120 * e.detail, e.offsetX, e.offsetY),
                      e.preventDefault()
                  },
                  !1
                ),
            (e.pressMouseButtons = function (e) {
              Pn(e.buttons, e.offsetX, e.offsetY)
            }),
            (e.releaseMouseButtons = function (e) {
              Dn(e.buttons, e.offsetX, e.offsetY)
            })
        })(n)
        break
      case Bn.LockedMouse:
        Rn(n)
        break
      default:
        console.log(`ERROR: Unknown control scheme ${In.controlScheme}`), Rn(n)
    }
  }
  function ce(e) {
    'use strict'
    ve = setInterval(function () {
      var e = new Date() - ye
      fe
        ? (clearInterval(ve),
          at(
            'video stream took:' +
              e / 1e3 +
              ' sec.  Url: ' +
              window.location.href,
            -4025536547
          ))
        : e / 1e3 > me &&
          (at(
            'no video. time passed:' +
              e / 1e3 +
              ' sec.  Url: ' +
              window.location.href +
              '  : clientInfo:' +
              JSON.stringify(wt),
            -4025536547
          ),
          (me += 30))
    }, 300)
    var t = document.getElementById('queueNumberText')
    t && (t.style.display = 'none')
    var n,
      o = document.getElementById('videoPlayOverlay')
    if (
      (o && (o.style.display = 'none'),
      console.log(' connectss cirrusServer:  ' + JSON.stringify(e)),
      console.log('111111111111  load()'),
      ((Yt = document.createElement('img')).id = 'freezeFrameOverlay'),
      (Yt.style.display = 'none'),
      (Yt.style.pointerEvents = 'none'),
      (Yt.style.position = 'absolute'),
      (Yt.style.zIndex = '30'),
      (document.onkeydown = function (e) {
        if (13 == e.keyCode && (X.isAfkUiUp || X.runningCountdown))
          return Y(), void document.getElementById('afkOverlay').focus()
        9 === e.keyCode && (e.preventDefault(), e.stopPropagation()),
          m(),
          a && a.value,
          Wt && console.log(`key down ${e.keyCode}, repeat = ${e.repeat}`),
          D(new Uint8Array([w.KeyDown, d(e), e.repeat]).buffer),
          8 === e.keyCode && document.onkeypress({ charCode: 8 }),
          e.ctrlKey &&
            e.altKey &&
            'e' === e.key &&
            (console.log('111111111111111111111111 keyCode: ' + e.keyCode),
            kn()),
          In.suppressBrowserKeys && c(e.keyCode) && e.preventDefault()
      }),
      (document.onkeyup = function (e) {
        X.isAfkUiUp ||
          (m(),
          Wt && console.log(`************ key up ${e.keyCode}`),
          D(new Uint8Array([w.KeyUp, d(e)]).buffer),
          In.suppressBrowserKeys && c(e.keyCode) && e.preventDefault())
      }),
      (document.onkeypress = function (e) {
        if (X.isAfkUiUp) return
        m(), Wt && console.log(`key press ${e.charCode}`)
        let t = new DataView(new ArrayBuffer(3))
        t.setUint8(0, w.KeyPress), t.setUint16(1, e.charCode, !0), D(t.buffer)
      }),
      (n = f),
      Qt.set('responseHandler01', n),
      !Bt)
    )
      if (
        ((window.WebSocket = window.WebSocket || window.MozWebSocket),
        window.WebSocket)
      ) {
        var i = 'wss://' + e.domain + '/ws/' + e.httpsPort + '/'
        console.log(' connectss url:  ' + i),
          ((Ut = new WebSocket(i)).onopen = function (t) {
            if (
              (console.log('11111111111111111111 ws.onopen  '),
              'VrApp' == Ce.platform)
            ) {
              var n = {
                type: 'vrApp',
                serverPublicIp: e.elInfo.serverPublicIp,
                port: 3389
              }
              console.log(
                '6666666666666 JSON.stringify(josnObj): ' + JSON.stringify(n)
              )
              var o = (function (e) {
                  var t = JSON.stringify(e)
                  console.log('encryptJosn JSON.stringify(josnObj): ' + t)
                  var n = btoa(t)
                  return (
                    console.log('encryptJosn btoa: ' + n),
                    console.log('encryptJosn atob: ' + atob(n)),
                    n
                  )
                })(n),
                i = 'e3dsrdp://' + o
              console.log('opening Vr connector:' + i),
                e3ds_alert('opening Vr connector:' + i, { color: 'blue' }),
                window.open(i, '_blank')
            }
          }),
          (Ut.onmessage = function (e) {
            var t,
              n,
              o = JSON.parse(e.data)
            if ('config' === o.type)
              null == tt &&
                null != o.ue4ExeInfo &&
                ((tt = o.ue4ExeInfo), (Ee = new Date())),
                re(o)
            else if ('playerCount' === o.type)
              (t = o.count - 1),
                (n = document.getElementById('kick-other-players-button')) &&
                  (n.value = `Kick (${t})`)
            else if ('offer' === o.type)
              console.log(' <- SS arvind offer --\x3e  msg.sdp: %o', o.sdp),
                onWebRtcOffer(o)
            else if ('answer' === o.type)
              console.log(' answer : ' + JSON.stringify(o)),
                U
                  ? ((_ = 2), J(o))
                  : (Jt.receiveAnswer(o),
                    (Jt.onAggregatedStats = (e) => {
                      let t = new Intl.NumberFormat(window.navigator.language, {
                          maximumFractionDigits: 0
                        }),
                        n = new Intl.NumberFormat(window.navigator.language, {
                          maximumFractionDigits: 0,
                          minimumIntegerDigits: 2
                        }),
                        o = (e.timestamp - e.timestampStart) / 1e3,
                        i = [],
                        a = [60, 60]
                      for (let e = 0; e < a.length; e++)
                        i.push(o % a[e]), (o /= a[e])
                      i.push(o)
                      let l = i[0],
                        s = Math.floor(i[1]),
                        r = Math.floor([i[2]]),
                        c = 'B',
                        d = e.hasOwnProperty('bytesReceived')
                          ? e.bytesReceived
                          : 0,
                        u = ['kB', 'MB', 'GB']
                      for (let e = 0; e < u.length && !(d < 1e5); e++)
                        (d /= 1e3), (c = u[e])
                      let g = 'kB',
                        m = e.hasOwnProperty('audiobytesReceived')
                          ? e.audiobytesReceived
                          : 0,
                        p = ['MB', 'GB']
                      m /= 1e3
                      for (let e = 0; e < p.length && !(m < 1e5); e++)
                        (m /= 1e3), (g = p[e])
                      var f = 'B',
                        y = e.hasOwnProperty('databytesReceived')
                          ? e.databytesReceived
                          : 0
                      let v = ['kB', 'MB', 'GB']
                      for (let e = 0; e < v.length && !(y < 1e5); e++)
                        (y /= 1e3), (f = v[e])
                      var h = 'B',
                        S = e.hasOwnProperty('databytesSent')
                          ? e.databytesSent
                          : 0
                      let w = ['kB', 'MB', 'GB']
                      for (let e = 0; e < w.length && !(S < 1e5); e++)
                        (S /= 1e3), (h = w[e])
                      let b = document.getElementById('qualityStatus'),
                        E = function (e) {
                          console.log(` speed ${e}`)
                          let t = e,
                            n = 1,
                            o = setInterval(function () {
                              ;(n -= 0.1),
                                b &&
                                  (b.style = `opacity: ${Math.abs(
                                    2 * (n - 0.5)
                                  )}`),
                                n <= 0.1 &&
                                  (0 == --t ? clearInterval(o) : (n = 1))
                            }, 100 / e)
                        }
                      let T = '',
                        k = 'lime'
                      F > 35
                        ? ((k = 'red'),
                          E(2),
                          (T += `<div style="color: ${k}">Bad network connection</div>`),
                          console.log('Bad network connection'))
                        : F > 26 &&
                          ((k = 'orange'),
                          E(1),
                          (T += `<div style="color: ${k}">Spotty network connection</div>`),
                          console.log('Spotty network connection')),
                        b && (b.className = `${k}Status`),
                        (T += `<div>Duration: ${n.format(r)}:${n.format(
                          s
                        )}:${n.format(l)}</div>`),
                        (T += `<div>Video Resolution: ${
                          e.hasOwnProperty('frameWidth') &&
                          e.frameWidth &&
                          e.hasOwnProperty('frameHeight') &&
                          e.frameHeight
                            ? e.frameWidth + 'x' + e.frameHeight
                            : 'N/A'
                        }</div>`),
                        (T += `<div>Received (${c}): ${t.format(d)}</div>`),
                        (T += `<div>Video_arvi Received (${c}): ${t.format(
                          d
                        )}</div>`),
                        (T += `<div>Audio Received (${g}): ${t.format(
                          m
                        )}</div>`),
                        (T += `<div>Data Received (${f}): ${t.format(
                          y
                        )}</div>`),
                        (T += `<div>Data Sent (${h}): ${t.format(S)}</div>`),
                        (T += `<div>Frames Decoded: ${
                          e.hasOwnProperty('framesDecoded')
                            ? t.format(e.framesDecoded)
                            : 'N/A'
                        }</div>`),
                        (T += `<div>Packets Lost: ${
                          e.hasOwnProperty('packetsLost')
                            ? t.format(e.packetsLost)
                            : 'N/A'
                        }</div>`),
                        (T += `<div style="color: ${k}">Bitrate (kbps): ${
                          e.hasOwnProperty('bitrate')
                            ? t.format(e.bitrate)
                            : 'N/A'
                        }</div>`),
                        (T += `<div>Framerate: ${
                          e.hasOwnProperty('framerate')
                            ? t.format(e.framerate)
                            : 'N/A'
                        }</div>`),
                        (T += `<div>Frames dropped: ${
                          e.hasOwnProperty('framesDropped')
                            ? t.format(e.framesDropped)
                            : 'N/A'
                        }</div>`),
                        (T += `<div>Latency (ms): ${
                          e.hasOwnProperty('currentRoundTripTime')
                            ? t.format(1e3 * e.currentRoundTripTime)
                            : 'N/A'
                        }</div>`),
                        (T += `<div style="color: ${k}">Video Quantization Parameter: ${F}</div>`)
                      let B = document.getElementById('stats')
                      B && (B.innerHTML = T)
                    }),
                    Jt.aggregateStats(1e3),
                    (Jt.latencyTestTimings.OnAllLatencyTimingsReady = function (
                      e
                    ) {
                      if (!e.BrowserReceiptTimeMs) return
                      let t = e.BrowserReceiptTimeMs - e.TestStartTimeMs,
                        n =
                          0 == e.UEPreEncodeTimeMs || 0 == e.UEPreCaptureTimeMs
                            ? '???'
                            : e.UEPostEncodeTimeMs - e.UEPreCaptureTimeMs,
                        o = e.UEPostCaptureTimeMs - e.UEPreCaptureTimeMs,
                        i = e.UEPostEncodeTimeMs - e.UEPreEncodeTimeMs,
                        a = e.UETransmissionTimeMs - e.UEReceiptTimeMs,
                        l = t - a,
                        s = t - l - a,
                        r = null,
                        c = null
                      console.log(
                        'timings.FrameDisplayDeltaTimeMs: ' +
                          e.FrameDisplayDeltaTimeMs
                      ),
                        console.log(
                          'timings.BrowserReceiptTimeMs: ' +
                            e.BrowserReceiptTimeMs
                        ),
                        e.FrameDisplayDeltaTimeMs &&
                          e.BrowserReceiptTimeMs &&
                          ((r = e.FrameDisplayDeltaTimeMs + t),
                          (c = r - l - a)),
                        console.log('endToEndLatency: ' + r),
                        console.log('browserSideLatency: ' + c)
                      let d = ''
                      ;(d += `<div>Net latency RTT (ms): ${l}</div>`),
                        (d += `<div>UE Capture+Encode (ms): ${n}</div>`),
                        (d += `<div>UE Capture (ms): ${o}</div>`),
                        (d += `<div>UE Encode (ms): ${i}</div>`),
                        (d += `<div>Total UE latency (ms): ${a}</div>`),
                        (d += `<div>Browser send latency (ms): ${s}</div>`),
                        (d +=
                          e.FrameDisplayDeltaTimeMs && e.BrowserReceiptTimeMs
                            ? `<div>Browser receive latency (ms): ${e.FrameDisplayDeltaTimeMs}</div>`
                            : ''),
                        (d += c
                          ? `<div>Total browser latency (ms): ${c}</div>`
                          : ''),
                        (d += `<div>Total latency (excluding browser) (ms): ${t}</div>`),
                        (d += r ? `<div>Total latency (ms): ${r}</div>` : ''),
                        console.log(d),
                        (document.getElementById('LatencyStats').innerHTML = d)
                    }),
                    ae(5))
            else if ('gettings' === o.type)
              console.log('message type:gettings:  ' + JSON.stringify(o)),
                console.log(
                  'message type:gettings msg.data:  ' + JSON.stringify(o.data)
                )
            else if ('addInExistingGuestList' === o.type)
              (a = document.getElementById('Guest-filter')) &&
                o.guestList.forEach(function (e) {
                  var t = document.createElement('option')
                  ;(t.text = t.value = e), a.add(t, a.length - 1)
                })
            else if ('GuestJoined' === o.type) {
              if ((a = document.getElementById('Guest-filter'))) {
                var i = document.createElement('option')
                ;(i.text = i.value = o.guestPlayerId), a.add(i, a.length - 1)
              }
            } else if ('GuestLeft' === o.type) {
              var a
              if ((a = document.getElementById('Guest-filter')))
                for (var l = 0; l < a.length; l++)
                  a.options[l].value == o.guestPlayerId && a.remove(l)
            } else if ('sendplayerType' === o.type) {
              Ct = o.matchmakerInfo
              var s = void 0
              null == s && (s = -1),
                null == wt && (wt = 'undefined'),
                (Ce.clientSideInfo = {}),
                (Ce.clientSideInfo.url = window.location.href),
                (Ce.clientSideInfo.userAgent = navigator.userAgent),
                (Ce.clientSideInfo.clientInfo = wt),
                (Ce.clientSideInfo.userDeviceInfo = zt)
              var r = JSON.stringify({
                type: 'takePlayerType',
                isSpectator: mt,
                hostMeetingId: ct,
                appDownloadInfo: he,
                GuestMeetingId: dt,
                version: s,
                userDeviceInfo: zt,
                configName: gt,
                urlVersion: _e,
                appName: yt('appName'),
                navigationType: window.location.href,
                url: window.location.href,
                userAgent: navigator.userAgent,
                clientInfo: wt,
                serverOwner: Se,
                forceMeetingMode: pt,
                accessedTopLevelDomainName: qe,
                url_searchParams: String(We),
                configuration: Ce
              })
              console.log(' ws.send(): ' + JSON.stringify(r)), Ut.send(r)
            } else if ('handleshuttingDownVM' === o.type)
              (Me = !0),
                ie(
                  (c =
                    'shutting down this VM .So redirecting you in 3 sec to re-establish connection'),
                  5e3
                )
            else if ('handleElDisconnected' === o.type) {
              Me = !0
              var c = 'EL crashed: ' + o.errormsg
              if (window.webRtcPlayerObj && window.webRtcPlayerObj.pcClient) {
                const e = window.webRtcPlayerObj.pcClient.iceConnectionState
                if ('connected' === e) {
                  var d =
                    'handleElDisconnected() EL crashed but Video stream is streaming. so returning'
                  return console.log(d), void at(d, -4089034249)
                }
                ;('failed' !== e && 'disconnected' !== e && 'closed' !== e) ||
                  (c = c + ' ice connectionState: ' + e)
              }
              ;(c +=
                ' .So redirecting you in 3 sec to re-establish connection'),
                console.log(c),
                ie(c, 5e3, !0, -972942690, 'handleElDisconnected')
            } else if ('handleStreamerDisconnected' === o.type)
              (Me = !0),
                ie(
                  (c =
                    'Streamer Disconnected.So redirecting you in 3 sec to re-establish connection'),
                  5e3,
                  !0,
                  -828953428,
                  'StreamerDisconnected'
                )
            else if ('ping' === o.type)
              Ut.send(JSON.stringify({ type: 'pong' }))
            else if ('reload' === o.type) location.reload()
            else if ('ConfigUpdateOnClientSide' === o.type)
              window.location.href = window.location.href
            else if ('redirectTo' === o.type)
              console.log('222222 <- SS: msg.data.url: ' + o.url),
                window.location.replace(o.url)
            else if ('jsonMessageForUE4' === o.type)
              console.log('jsonMessageForUE4: ' + JSON.stringify(o.jsonObj)),
                E(o.jsonObj)
            else if ('ShowThisHtmlPage' === o.type)
              (Bt = !0), Ut && Ut.close(), (self.location = o.htmlPage)
            else if ('setGuestId' === o.type)
              document.getElementById('GuestTitle').innerHTML = o.guestId
            else if ('sendtoUnrealinAppPurchaseResult' === o.type)
              console.log(
                '222222 <- SS: sendtoUnrealinAppPurchaseResult msg.data.info: ' +
                  o.data.purchasResult
              ),
                E({ purchasResult: o.data.purchasResult })
            else if ('ShowE3ds_alert' === o.type) {
              console.log(
                '222222 <- SS: ShowE3ds_alert msg.data.info: ' + o.data.info
              )
              var u = {}
              null != o.data.color && (u.color = o.data.color),
                null != o.data.timeout && (u.timeout = o.data.timeout),
                je(o.data.info, u)
            } else if ('UE5Editorlunched' === o.type) {
              console.log(JSON.stringify(o))
              var g = 'http://' + o.url + ':' + o.port
              console.log('UE5Editorlunched url ' + g), location.assign(g)
            } else if ('UE4LogFromEL' === o.type) console.info(o.data.logLine)
            else if ('showPageWIthMsg' === o.type) to(o.data.info)
            else if ('ShowInfo' === o.type) {
              if (
                (console.log('222222 <- SS: msg.data.info: ' + o.data.info),
                (u = {}),
                null != o.data.color && (u.color = o.data.color),
                null != o.data.timeout && (u.timeout = o.data.timeout),
                o.data.info.startsWith('showPageWIthMsg:'))
              )
                return void to(o.data.info.replace('showPageWIthMsg:', ''))
              if (o.data.info.startsWith('EL Error:')) {
                let e = o.data.info.replace('EL Error:', '')
                console.error(e), je(e, u)
              }
              try {
                var m = JSON.parse(o.data.info)
                console.log('33333 <- SS: msg.data.info: ' + JSON.stringify(m))
                var f = document.getElementById('Title_AcquiringProgresss'),
                  y = document.getElementById('AcquiringProgress'),
                  v = document.getElementById('Title_PreparingProgress'),
                  h = document.getElementById('PreparingProgress'),
                  S = document.getElementById('LunchingProgress'),
                  w = document.getElementById('Title_LunchingProgress')
                if ('AppAcquiringData' == m.datatype) {
                  if (
                    (console.log(
                      '5555 <- AppAcquiringData AcquiringProgress: ' +
                        m.data.percent
                    ),
                    e3ds_controller.callbacks &&
                    'function' ==
                      typeof e3ds_controller.callbacks
                        .onReceivingAppAcquiringProgress
                      ? e3ds_controller.callbacks.onReceivingAppAcquiringProgress(
                          m.data.percent
                        )
                      : console.log(
                          'not found e3ds_controller.callbacks.onReceivingAppAcquiringProgress'
                        ),
                    (f.style.display = 'block'),
                    (Zt = !0),
                    null !== y)
                  ) {
                    y.value = 100 * m.data.percent
                    var b = {
                      type: 'stage3_1_AppAcquiringProgress',
                      percent: m.data.percent
                    }
                    p(b),
                      (S.style.display = 'none'),
                      (w.style.display = 'none'),
                      (y.style.display = 'block'),
                      y.value >= 100 &&
                        ((v.style.display = 'block'),
                        null !== h &&
                          ((h.value = 0), (h.style.display = 'block')))
                  }
                } else
                  'AppPreparationData' == m.datatype &&
                    ((Zt = !0),
                    e3ds_controller.callbacks &&
                    'function' ==
                      typeof e3ds_controller.callbacks
                        .onReceivingAppPreparationProgress
                      ? e3ds_controller.callbacks.onReceivingAppPreparationProgress(
                          m.data.percent
                        )
                      : console.log(
                          'not found e3ds_controller.callbacks.onReceivingAppPreparationProgress'
                        ),
                    (b = {
                      type: 'stage3_2_AppPreparationProgress',
                      percent: m.data.percent
                    }),
                    p(b),
                    m.data.percent >= 100 && ((Zt = !1), ee(), K()),
                    null !== h &&
                      ((h.value = m.data.percent),
                      (h.style.display = 'block'),
                      (v.style.display = 'block'),
                      (S.style.display = 'none'),
                      (w.style.display = 'none'),
                      h.value >= 100 &&
                        ((w.style.display = 'block'),
                        null !== S &&
                          ((S.value = 0), (S.style.display = 'block')))))
              } catch (e) {}
            } else if ('TakeuserDeviceInfo' === o.type)
              (zt = o.userDeviceInfo),
                console.log(`userDeviceInfo : ${JSON.stringify(zt)}`),
                console.log(`elInfo : ${JSON.stringify(o.elInfo)}`),
                console.log(' 1111111111111 useExtendedTyping > ' + vt)
            else if ('OnLocalFileUploadingFinished' === o.type)
              window.open(o.data.Location, '_blank')
            else if ('OnFinishingOfClientFileDownladOnEL' === o.type) {
              let e = {
                cmd: 'onUploadedFileAvailable',
                filename: o.data.filename
              }
              E(e), console.log(e)
            } else
              'ue4Version' === o.type
                ? o.currentAppsUE4Version
                : 'ue4ExeInfoMsg' === o.type
                  ? ((tt = o.ue4ExeInfo).versionString,
                    (Ee = new Date()),
                    console.log('ue4AppExe path:' + tt.ue4AppExe))
                  : 'iceCandidate' === o.type
                    ? (Jt && Jt.handleCandidateFromServer(o.candidate), ae(5))
                    : 'DisableControlFromOthers' === o.type
                      ? (mt = !0)
                      : 'GiveControlToThisGuest' === o.type
                        ? (mt = !1)
                        : console.warn(`invalid SS message type: ${o.type}`)
          }),
          (Ut.reconnectAttempt = 0),
          (Ut.onerror = function (e) {
            console.error(`WS error: ${JSON.stringify(e)}`),
              console.error('redirecting to: ' + window.location.href),
              l(e)
          }),
          (Ut.onclose = function (e) {
            console.error(`WS closed: ${JSON.stringify(e.code)} - ${e.reason}`),
              console.error('WS closed:' + JSON.stringify(e)),
              l(e)
          }),
          (Ut.onclose111 = function (e) {
            console.warn(
              `WS closed: ${JSON.stringify(e.code)} - ${e.reason}` +
                window.location.href
            ),
              (Ut = void 0)
            let t = document.getElementById('player')
            Jt && (t.removeChild(Jt.video), Jt.close(), (Jt = void 0)),
              Wn(`Disconnected: ${e.reason}`),
              setTimeout(start, 4e3)
          })
      } else alert("Your browser doesn't support WebSocket")
    function l(e) {
      if (Ke) {
        Ut &&
          (Ut.reconnectAttempt++,
          console.error(
            'ssReconnec() reconnectAttempt:' + Ut.reconnectAttempt
          )),
          (Ut = void 0)
        var t = (function (e) {
            if (e >= 0 && e <= 999) return '(Unused)'
            if (e >= 1016) {
              if (e <= 1999) return '(For WebSocket standard)'
              if (e <= 2999) return '(For WebSocket extensions)'
              if (e <= 3999) return '(For libraries and frameworks)'
              if (e <= 4999) return '(For applications)'
            }
            return void 0 !== nt[e] ? nt[e] : '(Unknown)'
          })(e.code),
          n =
            'SS crashed.Redirecting you in 3 sec to re-establish connection. ' +
            JSON.stringify(e.code) +
            ' : ' +
            e.reason +
            ' : ' +
            t,
          o = !1
        ;(1e3 != e.code && 1001 != e.code && 1006 != e.code) || (o = !0),
          console.error(`WS closed: ${JSON.stringify(e.code)} - ${e.reason}`),
          ie(n, 5e3, o, -972634118)
      }
    }
  }
  ;(Number.prototype.clamp = function (e, t) {
    return Math.min(Math.max(this, e), t)
  }),
    document.getElementById('Title_AcquiringProgresss'),
    document.getElementById('AcquiringProgress'),
    document.getElementById('Title_PreparingProgress'),
    document.getElementById('PreparingProgress'),
    document.getElementById('LunchingProgress'),
    document.getElementById('Title_LunchingProgress')
  var de = console,
    ue = console.log,
    ge = console.warn
  lt(1),
    'undefined' == typeof e3ds_controller && (e3ds_controller = {}),
    void 0 === e3ds_controller.callbacks && (e3ds_controller.callbacks = {})
  var me = 30,
    pe = !1,
    fe = !1,
    ye = new Date(),
    ve = void 0,
    he = void 0
  let Se,
    we = -1
  var be = void 0,
    Ee = void 0
  let Te = null
  var ke = 50
  let Be,
    Ie,
    Ce,
    xe,
    Oe,
    Me = !1,
    De = 'https://global.xirsys.net/_turn/prod-global-2-22-2023',
    Pe = !1
  var Re = 'connector.eagle3dstreaming.com',
    Ae = void 0,
    Ne = void 0
  let Le, Fe, _e, Ue, Je, We, He, $e, qe
  if (void 0 === Ve) var Ve = void 0
  null != Ve &&
    ((Ce = Ve), console.log('configurationObj: ' + JSON.stringify(Ce))),
    document.addEventListener('visibilitychange', function () {
      'hidden' === document.visibilityState && console.log('Page minimized')
    })
  var Ge = 0
  function ze(e, t) {
    try {
      e.muted = t
    } catch (e) {
      console.log('Error: ' + e.message),
        it('muteElement()', -937307130),
        it(e.message, -937307130),
        it(console.trace(), -937307130)
    }
  }
  function je(e, t) {
    0 != yt('enableRuntimeNotifications') && e3ds_alert && e3ds_alert(e, t)
  }
  function Xe(e, t, n = 1e3) {
    null != t
      ? 1 === t.readyState
        ? t.send(e)
        : setTimeout(function () {
            Xe(e, t, n)
          }, 1e3)
      : console.error('ahsanWsSend--\x3ews2WorkWIth undefined  ')
  }
  var Qe = new Array(),
    Ye = !1,
    Ke = !0,
    Ze = !0,
    et = void 0,
    tt = void 0
  let nt = {
    1e3: 'Normal Closure',
    1001: 'Going Away',
    1002: 'Protocol Error',
    1003: 'Unsupported Data',
    1004: '(For future)',
    1005: 'No Status Received',
    1006: 'Abnormal Closure',
    1007: 'Invalid frame payload data',
    1008: 'Policy Violation',
    1009: 'Message too big',
    1010: 'Missing Extension',
    1011: 'Internal Error',
    1012: 'Service Restart',
    1013: 'Try Again Later',
    1014: 'Bad Gateway',
    1015: 'TLS Handshake'
  }
  function ot(e) {
    Se = e
  }
  function it(e, t) {
    var n = Je
    lo.elInfo &&
      (n =
        n +
        ' : ----\x3e' +
        lo.elInfo.instanceId_exeLuncher +
        ' : ' +
        lo.elInfo.computerName),
      wt && (n = n + ' : ----\x3e' + JSON.stringify(wt)),
      zt && (n = n + ' : ----\x3e' + JSON.stringify(zt)),
      (n =
        n +
        ' : ----\x3eappname: ' +
        ut +
        ' , owner: ' +
        Se +
        ' , ' +
        JSON.stringify(tt)),
      null != Oe &&
        (n =
          n +
          ' : ----\x3e config.peerConnectionOptions: ' +
          JSON.stringify(Oe.peerConnectionOptions) +
          ' : ----\x3e'),
      (n = e + ' : ' + n),
      null == t ? at(n) : at(n, t)
  }
  function at(e, t = -572005528) {
    1 == Ge && console.log('postToTelegram(): ' + e),
      fetch('https://notifications.eagle3dstreaming.com/message_sent', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ input_chat_id: t, message: e })
      })
        .then((e) => {
          1 == Ge && console.log(e)
        })
        .catch((e) => {
          console.error(e)
        })
  }
  function lt(e) {
    0 == e
      ? ((console = console || {}),
        (console.log = function () {}),
        (console.warn = function () {}))
      : 1 == e && ((console = de), (console.log = ue), (console.warn = ge))
  }
  var st = 'assets/images/UE4_Logo.png',
    rt = 'assets/images/background.jpg'
  rt = void 0
  var ct = void 0,
    dt = void 0,
    ut = void 0,
    gt = void 0,
    mt = !1,
    pt = 0,
    ft = void 0
  function yt(e) {
    if (null != Ce) {
      var t = Ce[e]
      if ('' == t || 'undefined' == t || null == t) return
      return t
    }
    return We.get(e)
  }
  var vt = 0,
    ht = !1,
    St = 1,
    wt = void 0,
    bt = 'assets/images/background.jpg'
  bt = void 0
  var Et = !0,
    Tt = '',
    kt = '',
    Bt = !1,
    It = !1,
    Ct = void 0,
    xt = !1,
    Ot = void 0,
    Mt = void 0,
    Dt = !1,
    Pt = 1,
    Rt = 0,
    At = 0,
    Nt = 9e5,
    Lt = 0
  function Ft() {
    1 == St
      ? (console.log(' 1111111111111 showbrowserMouse === 1 > '),
        console.log(
          ' 1111111111111 extractValueFromUrl(showbrowserMouse):' +
            yt('showbrowserMouse')
        ),
        (kt = 'default'),
        (Tt = 'cursor: default'))
      : ((kt = 'none'), (Tt = '')),
      console.log(' 1111111111111 styleCursor > ' + kt),
      console.log(' 1111111111111 styleAdditional > ' + Tt),
      H()
  }
  let _t
  var Ut,
    Jt = null,
    Wt = !1
  const Ht = 1
  var $t,
    qt,
    Vt,
    Gt,
    zt,
    jt,
    Xt = void 0,
    Qt = new Map(),
    Yt = null,
    Kt = !0
  ;(It = !1), (Bt = !1)
  let Zt = !1,
    en = 0
  var tn = void 0,
    nn = void 0,
    on = void 0
  function an() {
    return !(
      window.location === window.parent.location || window.self === window.top
    )
  }
  function ln() {
    if ((void 0 === He && (He = window.location.search), void 0 === e))
      var e = new URLSearchParams(window.location.search)
    if ('undefined' != typeof e3ds_controller && null == Ce)
      if (((Le = 0.01), null != e3ds_controller.core)) {
        null != e3ds_controller.core.domain
          ? (Re = e3ds_controller.core.domain)
          : console.warn(
              'e3ds_controller.core.domain absent so setting to default one: ' +
                Re
            ),
          null != e3ds_controller.core.userName
            ? ot(e3ds_controller.core.userName)
            : console.error('e3ds_controller.core.userName missing'),
          null != e3ds_controller.core.appName
            ? (Ae = e3ds_controller.core.appName)
            : console.error('e3ds_controller.core.appName missing'),
          null != e3ds_controller.core.configurationName
            ? (Ne = e3ds_controller.core.configurationName)
            : console.error('e3ds_controller.core.configurationName missing'),
          null == Se && console.error('userName missing'),
          null == Ae && console.error('app missing'),
          null == Ne && console.error('configurationName missing')
        var t = '/v5/' + Se + '/' + Ae + '/' + Ne
        ;(Ue = t),
          (Je = 'https://' + Re + t),
          (Je += He),
          console.log('href_emulated: ' + Je)
      } else console.error('e3ds_controller.core is missing ')
    for (var [n, o] of e.entries()) {
      console.log(n, o)
      var i = e.get('app'),
        a = e.get('owner'),
        l = e.get('configuration')
      null != i && (Ae = i), null != a && ot(a), null != l && (Ne = l)
    }
    ;(Ue = new URL(Je).pathname),
      (Fe = Ue.split('/')),
      (_e = Fe[1]),
      ($e = window.location.hostname.split('.')),
      (qe = $e[1] + '.' + $e[2])
    for (const [t, n] of e)
      ('args' !== t && 'launcher' !== t) || e.set('exeLunchArgs', n),
        console.log(t, n)
    if ('v5' == _e)
      if ('spectator' == Fe[2])
        (mt = !0),
          (pt = 2),
          ce({ domain: 'ms6.eaglepixelstreaming.com', httpsPort: 8084 })
      else {
        ot(Fe[2]), (ut = Fe[3]), (gt = Fe[4])
        var s = e.get('appVersion')
        s && (we = s)
        for (const [t, n] of e) {
          if ('hostMeetingId' == t) {
            ct = n
            break
          }
          if ('GuestMeetingId' == t) {
            ;(dt = n), (gt = Fe[3]), (ut = void 0)
            break
          }
        }
      }
    else if ('v4' == _e)
      if (null == Fe[2]) console.log('wrong url. missing parts of it')
      else {
        var r = Fe[2]
        console.log('/:configurationStr:' + r)
        var c = atob(r)
        console.log('/:configuration decryptedString:' + c)
        try {
          ;(Ce = JSON.parse(c)),
            (Ce.systemVersion = 4),
            ot(Ce.owner),
            (ut = Ce.appName)
        } catch (e) {
          console.log('wrong url'),
            e instanceof SyntaxError
              ? (console.error(e.name), console.log(e))
              : (console.error(e.message), console.log(e))
        }
      }
    else if ('v6' == _e)
      if (null == Fe[2]) console.log('wrong url. missing parts of it')
      else {
        var d = Fe[2]
        1 == Ge && console.log('/:jsonStr:' + d),
          (c = atob(d)),
          1 == Ge && console.log('/:configuration decryptedString:' + c)
        try {
          ;(decryptedJson = JSON.parse(c)),
            (Ce.systemVersion = 6),
            ot(decryptedJson.owner),
            (ut = decryptedJson.appName),
            null == decryptedJson.configName
              ? null == decryptedJson.ConfigName
                ? (console.warn('ConfigName: ' + decryptedJson.ConfigName),
                  je('Invlaid encryted Url ', { color: 'Red' }))
                : null != decryptedJson.ConfigName &&
                  (gt = decryptedJson.ConfigName)
              : (gt = decryptedJson.configName)
        } catch (e) {
          console.log('wrong url'),
            e instanceof SyntaxError
              ? (console.error(e.name), console.log(e))
              : (console.error(e.message), console.log(e))
        }
      }
    else console.log('Invalid url')
    var u = document.getElementById('resoulbar')
    if (
      (u && (u.style.transform = 'scaleX(-1)'),
      null == (be = document.getElementById('streamingVideo')))
    )
      return (
        console.warn('streamingVideoElement : ', be), void setTimeout(main, 2e3)
      )
    ;('v5' != _e && 'v4' != _e && 'v6' != _e) || mt || so(), Yn()
  }
  var sn = void 0,
    rn = !1
  function cn(e = 0, t, n) {
    if (
      (console.log('e3ds_session_token: ' + t),
      console.log('clientUserName: ' + n),
      null == t || '' == t)
    )
      return void console.warn('invalid e3ds_session_token: ' + t)
    if (null == n || '' == n) return void console.warn('invalid clientUserName')
    var o =
      'https://token.eaglepixelstreaming.com//api/v1/token/verify?token=' +
      t +
      '&client=' +
      n
    const i = new XMLHttpRequest()
    ;(i.onreadystatechange = function () {
      if (422 === i.status)
        return (
          console.log(
            'GetTokenInfo() received 422 status code. Returning default clientInfo object.'
          ),
          void go()
        )
      if (429 === i.status)
        return (
          console.log(
            'GetTokenInfo() received 429 status code. Retrying after 2000ms.'
          ),
          null != sn && clearTimeout(sn),
          void (sn = setTimeout(cn, 2e3, e))
        )
      if ('' !== i.responseText && void 0 !== i.responseText) {
        if (rn) return
        ;(rn = !0),
          console.log(
            'GetTokenInfo() request successful. Clearing retry timer.'
          ),
          clearTimeout(sn),
          console.log('GetTokenInfo() xmlHttp.responseText: ' + i.responseText)
        var t = void 0
        if (200 === i.status) {
          try {
            t = JSON.parse(i.responseText)
          } catch (e) {
            console.log(' e3ds_session_token verification parse failed'),
              console.log(e)
          }
          console.log(
            'GetTokenInfo() decryptedJsone_3ds_controller1: ' +
              JSON.stringify(t, null, '\t')
          ),
            (e3ds_controller.core = t.core),
            (e3ds_controller.configurationToOverride =
              t.configurationToOverride),
            ln()
        } else if (401 === i.status) {
          try {
            t = JSON.parse(i.responseText)
          } catch (e) {
            console.log(' e3ds_session_token verification parse failed'),
              console.log(e)
          }
          if (t.error)
            return void console.warn('GetTokenInfo() error: ' + t.error)
        }
      } else
        e < 20
          ? (console.log('GetTokenInfo() retrying after 2000ms.'),
            null != sn && clearTimeout(sn),
            (sn = setTimeout(cn, 2e3, e + 1)))
          : (console.log('GetTokenInfo() maximum retries exceeded.'), go())
    }),
      i.open('GET', o, !0),
      i.send(null)
  }
  function p(e) {
    an() && window.top.postMessage(e, '*')
  }
  'undefined' != typeof e3ds_controller &&
    (null != Ce
      ? ((e3ds_controller.main = function () {
          ln()
        }),
        (Je = window.location.href))
      : (e3ds_controller.main = function (e, t) {
          cn(0, e, t)
        }))
  var dn = !1,
    un = void 0
  function gn() {
    Ot.play()
      .then(() => {
        ;(Ot.ahsanHack = 'success'),
          at(
            'handleOnAudioTrack() audioElem.play() audioElem.ahsanHack: ' +
              Ot.ahsanHack,
            -937307130
          ),
          (Ot.muted = !1),
          ze(streamingVideo, !1),
          console.log('audioElem2.muted: ' + Ot.muted),
          at('audioElem2.muted: ' + Ot.muted, -937307130)
      })
      .catch((e) => {
        ;(Ot.ahsanHack = 'failed'),
          console.warn(
            'Autoplay  audio was prevented.waiting  for first interaction call '
          ),
          console.log('handleOnAudioTrack() Error.message : ' + e.message),
          console.log('handleOnAudioTrack() error.name : ', e.name),
          console.log('handleOnAudioTrack() error.stack : ', e.stack),
          at('handleOnAudioTrack() audioElem.play() error: ' + e, -937307130)
      })
  }
  function mn() {
    let e = btoa(G.jpeg.reduce((e, t) => e + String.fromCharCode(t), ''))
    ;(Yt.src = 'data:image/jpeg;base64,' + e),
      (Yt.onload = function () {
        ;(G.height = Yt.naturalHeight),
          (G.width = Yt.naturalWidth),
          j(),
          Kt ? (Un(), H()) : z()
      })
  }
  function pn(e) {
    e = e || {}
    var t = this
    ;(this.cfg = e.peerConnectionOptions || {}),
      (this.cfg.sdpSemantics = 'unified-plan'),
      (this.cfg.offerExtmapAllowMixed = !1),
      (this.pcClient = null),
      (this.dcClient = null),
      (this.tnClient = null),
      (this.sdpConstraints = {
        offerToReceiveAudio: 1,
        offerToReceiveVideo: 1
      }),
      (this.dataChannelOptions = { ordered: !0 }),
      (this.latencyTestTimings = {
        TestStartTimeMs: null,
        UEReceiptTimeMs: null,
        UEPreCaptureTimeMs: null,
        UEPostCaptureTimeMs: null,
        UEPreEncodeTimeMs: null,
        UEPostEncodeTimeMs: null,
        UETransmissionTimeMs: null,
        BrowserReceiptTimeMs: null,
        FrameDisplayDeltaTimeMs: null,
        Reset: function () {
          ;(this.TestStartTimeMs = null),
            (this.UEReceiptTimeMs = null),
            (this.UEPreCaptureTimeMs = null),
            (this.UEPostCaptureTimeMs = null),
            (this.UEPreEncodeTimeMs = null),
            (this.UEPostEncodeTimeMs = null),
            (this.UETransmissionTimeMs = null),
            (this.BrowserReceiptTimeMs = null),
            (this.FrameDisplayDeltaTimeMs = null)
        },
        SetUETimings: function (e) {
          ;(this.UEReceiptTimeMs = e.ReceiptTimeMs),
            (this.UEPreCaptureTimeMs = e.PreCaptureTimeMs),
            (this.UEPostCaptureTimeMs = e.PostCaptureTimeMs),
            (this.UEPreEncodeTimeMs = e.PreEncodeTimeMs),
            (this.UEPostEncodeTimeMs = e.PostEncodeTimeMs),
            (this.UETransmissionTimeMs = e.TransmissionTimeMs),
            (this.BrowserReceiptTimeMs = Date.now()),
            this.OnAllLatencyTimingsReady(this)
        },
        SetFrameDisplayDeltaTime: function (e) {
          null == this.FrameDisplayDeltaTimeMs &&
            ((this.FrameDisplayDeltaTimeMs = Math.round(e)),
            this.OnAllLatencyTimingsReady(this))
        },
        OnAllLatencyTimingsReady: function (e) {}
      }),
      (createWebRtcVideo = function () {
        var e = be
        if (
          (setInterval(function () {
            e.readyState
          }, 1e3),
          1 == Pt &&
            (Qe.length > 0 || ((e.autoplay = !0), ze(e, !0)),
            (e.disablepictureinpicture = !0),
            u()),
          e.addEventListener('loadstart', function () {}),
          e.addEventListener('durationchange', function (e) {}, !0),
          e.addEventListener(
            'loadeddata',
            function (e) {
              console.log(
                'loadeddata video() e.target.duration:',
                e.target.duration
              )
            },
            !0
          ),
          e.addEventListener('seeking', (e) => {
            console.log('Video is seeking a new position.')
          }),
          e.addEventListener('seeked', (e) => {
            console.log('Video found the playback position it was looking for.')
          }),
          e.addEventListener('playing', (e) => {
            console.log('Video is no longer paused'), (fe = !0)
          }),
          e.addEventListener('waiting', (e) => {
            console.log('Video is waiting for more data.')
          }),
          e.addEventListener('ended', (e) => {
            console.log(
              'Video stopped either because 1) it was over, or 2) no further data is available.'
            )
          }),
          e.addEventListener('volumechange', (e) => {
            console.log('The volume changed.')
          }),
          e.addEventListener('emptied', (e) => {
            console.log('Uh oh. The media is empty. Did you call load()?')
          }),
          e.addEventListener('stalled', (e) => {
            console.log('Failed to fetch data, but trying.')
          }),
          e.addEventListener('progress', function (e) {}, !0),
          e.addEventListener('canplay', function (e) {}, !0),
          e.addEventListener('canplaythrough', function (e) {}, !0),
          e.addEventListener(
            'loadedmetadata',
            function (e) {
              console.log('loadedmetadata video():', new Date())
              var t = new Date() - void 0
              Math.round(t / 6e4),
                console.log('Time cost :', t / 6e4),
                clearInterval(un),
                Ut &&
                  Ut.readyState === Ht &&
                  (console.log(
                    '----------------- webRtcPlayerObj.onVideoInitialised()--\x3eWS_OPEN_STATE'
                  ),
                  1 == yt('isE3DSEngineApp') &&
                    (function () {
                      if (1 != yt('isE3DSEngineApp'))
                        return (
                          console.warn(
                            'Engine version below 4.26. so skipping settingsButton VideoEncoderQP -> : ' +
                              F
                          ),
                          void je(
                            'Require Atleast E3DS-UE4-Engine 4.26 ' +
                              (Math.random() * (0.12 - 0.02) + 0.02).toFixed(4),
                            { timeout: 2e3, color: 'blue' }
                          )
                        )
                      var e = JSON.stringify({
                        type: 'settings',
                        data: {
                          quality: yt('quality'),
                          minBitrate: yt('minBitrate'),
                          maxBitrate: yt('maxBitrate'),
                          resolution: yt('resolution'),
                          rateCtrl: yt('rateCtrl')
                        }
                      })
                      0 == yt('qualityLevel')
                        ? (e.minBitrate = 0)
                        : 1 == yt('qualityLevel') && (e.minBitrate = 2e7),
                        console.log('applyInitialeStreamSettings--\x3e ' + e),
                        Ut.send(e)
                    })(),
                  Kt && (Un(), H()))
            },
            !0
          ),
          'requestVideoFrameCallback' in HTMLVideoElement.prototype)
        ) {
          const n = (o, i) => {
            if (i.receiveTime && i.expectedDisplayTime) {
              const e = i.presentationTime - i.receiveTime
              t.aggregatedStats || (t.aggregatedStats = {}),
                (t.aggregatedStats.receiveToCompositeMs = e)
            }
            e.requestVideoFrameCallback(n)
          }
          e.requestVideoFrameCallback(n)
        }
        return e
      }),
      (this.video = createWebRtcVideo()),
      (onsignalingstatechange = function (e) {
        console.log('signaling state change:', e)
      }),
      (oniceconnectionstatechange = function (e) {
        switch (
          (console.log(
            'ice connection state change:',
            e.target.iceConnectionState,
            '  -> ',
            new Date()
          ),
          e.target.iceConnectionState)
        ) {
          case 'new':
            console.log('ICE connection state: New connection.')
            break
          case 'checking':
            console.log('ICE connection state: Checking connectivity.')
            break
          case 'connected':
          case 'completed':
            console.log('ICE connection state: Connection established.')
            break
          case 'disconnected':
            console.log(
              'ICE connection state: Disconnected from the remote peer.'
            )
            break
          case 'failed':
            console.log('ICE connection state: Connection failed.')
            break
          case 'closed':
            console.log('ICE connection state: Connection closed.')
            break
          default:
            console.log('Unknown ICE connection state.')
        }
        if ('disconnected' == e.target.iceConnectionState)
          console.warn('ice server diconnected')
        else if ('connected' == e.target.iceConnectionState) {
          var t = new Date() - Ee,
            n = 'iceConnectionState connected at : ' + Math.round(t / 6e4)
          console.log(n),
            n > 10 && it(n, -984137241),
            (un = setInterval(function () {
              console.log('High load.Might take upto 3 min. dont close tab ')
            }, 15e3))
        }
      }),
      (onicegatheringstatechange = function (e) {
        console.log('ice gathering state change:', e), ae(5)
      }),
      (handleTrackRemoved = function (e) {
        console.log('A remote track has been removed'),
          'video' === e.track.kind && console.log(' video stream has stopped.')
      }),
      (handleOnTrack = function (e) {
        if (
          (console.log('handleOnTrack', e.streams),
          e.track &&
            console.log(
              'Got track - ' +
                e.track.kind +
                ' id=' +
                e.track.id +
                ' readyState=' +
                e.track.readyState
            ),
          'audio' != e.track.kind)
        )
          return (
            'video' == e.track.kind && (t.video.srcObject, e.streams[0]),
            null != Te &&
              Te !== e.track &&
              console.log('Video track has changed'),
            (Te = e.track),
            (Te.onended = function () {
              console.log('XXXXXXXXXXXX Video has stopped.')
            }),
            ae(5),
            (t.video.srcObject = e.streams[0]),
            console.log('Set video source from video track ontrack.'),
            (pe = !0),
            Ut &&
              Ut.send(
                JSON.stringify({ type: 'DoFBEntreyofVideoStreamStartedAt' })
              ),
            Be && clearInterval(Be),
            void (Be = setInterval(function () {
              Ut &&
                Ut.send(
                  JSON.stringify({
                    type: 'updateFBEntryofVideoStreamContinueHeartBeat'
                  })
                )
            }, 3e4))
          )
        et = e.streams[0]
      }),
      (this.handleOnAudioTrack = function (e) {
        console.log('handleOnAudioTrack()111:', new Date()),
          t.video.srcObject != e &&
            t.video.srcObject &&
            t.video.srcObject !== e &&
            ((Ot.autoplay = !0),
            (Ot.srcObject = e),
            (Mt = e),
            Ot.addEventListener('loadedmetadata', function (e) {}, !0),
            Ot.addEventListener('loadstart', function () {}),
            Ot.addEventListener('durationchange', function (e) {}, !0),
            Ot.addEventListener('loadeddata', function (e) {}, !0),
            Ot.addEventListener('progress', function (e) {}, !0),
            Ot.addEventListener('canplay', function (e) {}, !0),
            Ot.addEventListener('canplaythrough', function (e) {}, !0),
            gn())
      }),
      (createDataChannel = function (e, t, n) {
        let o = e.createDataChannel(t, n)
        return (
          console.log(`Created datachannel (${t})`),
          setupDataChannelCallbacks(o),
          o
        )
      }),
      (setupDataChannelCallbacks = function (e) {
        try {
          return (
            (e.binaryType = 'arraybuffer'),
            e.addEventListener('open', (t) => {
              console.log(`Data channel connected: ${e.label}(${e.id})`),
                'function' == typeof onDataChannelOpen
                  ? onDataChannelOpen()
                  : console.log('not found onDataChannelOpen'),
                e3ds_controller.callbacks &&
                'function' == typeof e3ds_controller.callbacks.onDataChannelOpen
                  ? e3ds_controller.callbacks.onDataChannelOpen()
                  : console.log(
                      'not found e3ds_controller.callbacks.onDataChannelOpen'
                    ),
                Ut &&
                  Ut.readyState === Ht &&
                  (Ln('WebRTC connected, waiting for video'),
                  ae(100),
                  E('4K'),
                  V(),
                  new Date().toUTCString(),
                  Ut &&
                    Ut.send(
                      JSON.stringify({
                        type: 'DoFBEntreyofDataChannelConnectedAt'
                      })
                    ),
                  Ie && clearInterval(Ie),
                  (Ie = setInterval(function () {
                    Ut &&
                      Ut.send(
                        JSON.stringify({
                          type: 'updateFBEntryofDataChannelHeartBeat'
                        })
                      )
                  }, 3e4))),
                clearTimeout(void 0)
            }),
            e.addEventListener('close', (t) => {
              console.log(`Data channel disconnected: ${e.label}(${e.id}`, t),
                Ie && clearInterval(Ie),
                'function' == typeof onDataChannelClose
                  ? onDataChannelClose()
                  : console.log('not found onDataChannelClose'),
                e3ds_controller.callbacks &&
                'function' ==
                  typeof e3ds_controller.callbacks.onDataChannelClose
                  ? e3ds_controller.callbacks.onDataChannelClose()
                  : console.log(
                      'not found e3ds_controller.callbacks.onDataChannelClose'
                    )
            }),
            e.addEventListener('message', (t) => {
              console.log(`Got message (${e.label})`, t.data),
                (function (e) {
                  var t = new Uint8Array(e)
                  let n = new TextDecoder('utf-16').decode(e.slice(1))
                  if (G.receiving) {
                    let e = new Uint8Array(G.jpeg.length + t.length)
                    e.set(G.jpeg, 0),
                      e.set(t, G.jpeg.length),
                      (G.jpeg = e),
                      G.jpeg.length === G.size
                        ? ((G.receiving = !1),
                          (G.valid = !0),
                          console.log(
                            `received complete freeze frame ${G.size}`
                          ),
                          mn())
                        : G.jpeg.length > G.size
                          ? (console.error(
                              `received bigger freeze frame than advertised: ${G.jpeg.length}/${G.size}`
                            ),
                            (G.jpeg = void 0),
                            (G.receiving = !1))
                          : console.log(
                              `received next chunk (${t.length} bytes) of freeze frame: ${G.jpeg.length}/${G.size}`
                            )
                  } else if (t[0] === P.fmp4) {
                    var o = e.slice(1)
                    console.log('fmp4 size ' + o.byteLength), putPacket(o)
                  } else if (t[0] === P.QualityControlOwnership) {
                    let e = 0 !== t[1]
                    null != $t &&
                      null != e &&
                      (($t.disabled = e), ($t.checked = e))
                  } else if (t[0] === P.Response) {
                    if (mt) return
                    let t = new TextDecoder('utf-16').decode(e.slice(1))
                    console.log('111111111 response: ' + t)
                    for (let e of Qt.values()) e(t)
                  } else if (t[0] === P.Command) {
                    let t = new TextDecoder('utf-16').decode(e.slice(1))
                    console.log('111111111 commandAsString: ' + t)
                    let n = JSON.parse(t)
                    'onScreenKeyboard' === n.command &&
                      1 == vt &&
                      (function (e) {
                        if (e.showOnScreenKeyboard) {
                          let o = unquantizeAndDenormalizeUnsigned(e.x, e.y)
                          var t = o.y.toString() + 'px',
                            n = (sfsfsf = (o.x - 40).toString() + 'px')
                          ;(a.style.top = t),
                            (a.style.left = n),
                            (y = !0),
                            a.value,
                            E({ CMD: 'sendFocusedWidgetText' })
                        } else l()
                      })(n)
                  } else if (t[0] === P.FreezeFrame)
                    (G.size = new DataView(t.slice(1, 5).buffer).getInt32(
                      0,
                      !0
                    )),
                      (G.jpeg = t.slice(5)),
                      G.jpeg.length < G.size
                        ? (console.log(
                            `received first chunk of freeze frame: ${G.jpeg.length}/${G.size}`
                          ),
                          (G.receiving = !0))
                        : (console.log(
                            `received complete freeze frame: ${G.jpeg.length}/${G.size}`
                          ),
                          mn())
                  else if (t[0] === P.UnfreezeFrame)
                    (Yt.style.display = 'none'), (G.valid = !1)
                  else if (t[0] === P.VideoEncoderAvgQP)
                    (F = new TextDecoder('utf-16').decode(e.slice(1))),
                      console.log(`received VideoEncoderAvgQP from ue: ${F}`)
                  else if (t[0] == P.LatencyTest) {
                    let t = new TextDecoder('utf-16').decode(e.slice(1))
                    console.log('Got latency timings from UE.'), console.log(t)
                    let n = JSON.parse(t)
                    console.log(
                      'LatencyTest from ue:' + JSON.stringify(n, null, '\t')
                    ),
                      Jt && Jt.latencyTestTimings.SetUETimings(n)
                  } else if (t[0] == P.InitialSettings) {
                    let t = new TextDecoder('utf-16').decode(e.slice(1)),
                      n = JSON.parse(t)
                    console.log(
                      'InitialSettings from ue:' + JSON.stringify(n, null, '\t')
                    ),
                      (xe = n)(
                        (document.getElementById('resoulbar').value =
                          xe.Encoder.MaxQP)
                      )
                  } else
                    console.warn(
                      `processResponseData data: unrecognised data received, packet ID ${t[0]}` +
                        JSON.stringify(t[0])
                    ),
                      console.log(n),
                      console.log(e),
                      console.log(t),
                      console.log(JSON.stringify(t)),
                      console.log()
                })(t.data)
            }),
            e.addEventListener('error', (t) => {
              console.error(`Data channel error: ${e.label}(${e.id}`, t)
            }),
            e
          )
        } catch (e) {
          return (
            console.warn('Datachannel setup caused an exception: ', e), null
          )
        }
      }),
      (onicecandidate = function (e) {
        console.log('----- onicecandidate() ICE candidate: ', e),
          e.candidate
            ? (e.candidate.candidate &&
                Ut &&
                Ut.readyState === Ht &&
                (console.log('-> SS: iceCandidate'),
                Ut.send(
                  JSON.stringify({
                    type: 'iceCandidate',
                    candidate: e.candidate
                  })
                )),
              console.warn(
                'onicecandidate()---\x3e e.candidate.type',
                e.candidate.type
              ),
              e.candidate.type,
              'srflx' == e.candidate.type &&
                (console.warn('The STUN server is reachable!'),
                console.log(
                  `   Your Public IP Address is: ${e.candidate.address}`
                )),
              'relay' == e.candidate.type &&
                console.warn('The TURN server is reachable !'))
            : console.warn(
                'onicecandidate()---\x3e ICE candidate undefined',
                new Date()
              )
      }),
      (handleCreateOffer = function (e) {
        e.createOffer(t.sdpConstraints).then(
          function (t) {
            if (
              (yt('audioType'),
              mungeSDP(t),
              console.log('------offer.sdp: ' + t.sdp),
              console.warn('111 pc.setLocalDescription(offer)', new Date()),
              e.setLocalDescription(t),
              console.warn('222 pc.setLocalDescription(offer)', new Date()),
              console.log('------offer.sdp: ' + t.sdp),
              Ut && Ut.readyState === Ht)
            ) {
              let e = JSON.stringify(t)
              console.log('-> SS: offer:'), Ut.send(e)
            }
          },
          function () {
            console.warn("Couldn't create offer")
          }
        )
      }),
      (mungeSDP = function (e) {
        let t = e.sdp.replace(
            /(a=fmtp:\d+ .*level-asymmetry-allowed=.*)\r\n/gm,
            '$1;x-google-start-bitrate=10000;x-google-max-bitrate=100000\r\n'
          ),
          n = 'maxaveragebitrate=510000;'
        dn && (n += 'sprop-maxcapturerate=48000;'),
          (n += 'stereo=1;'),
          (n += 'useinbandfec=1'),
          (t = t.replace('useinbandfec=1', n)),
          (e.sdp = t)
      }),
      (handleCreateAnswer111 = function (e) {
        e.createAnswer().then(
          function (t) {
            e.setLocalDescription(t).then(function () {
              if (
                (console.log('answer %o', t.sdp), Ut && Ut.readyState === Ht)
              ) {
                let e = JSON.stringify(t)
                console.log('->arvind SS: SendAnswer'), Ut.send(e)
              }
            })
          },
          function () {
            console.warn("Couldn't create offer")
          }
        )
      }),
      (setupPeerConnection = function (e) {
        e.SetBitrate &&
          console.log("Hurray! there's RTCPeerConnection.SetBitrate function"),
          (e.onsignalingstatechange = onsignalingstatechange),
          (e.oniceconnectionstatechange = oniceconnectionstatechange),
          (e.onicegatheringstatechange = onicegatheringstatechange),
          (e.ontrack = handleOnTrack),
          (e.onremovetrack = handleTrackRemoved),
          (e.onicecandidate = onicecandidate),
          (e.onnegotiationneeded = function () {
            console.warn('Negotiation Needed')
          }),
          (e.onicecandidateerrorIsSendToTlegarm = !1),
          (e.onicecandidateerror = function (t) {
            console.warn('onicecandidateerror(): ' + t.errorCode),
              (t.errorCode >= 300 && t.errorCode <= 699) ||
                (t.errorCode >= 700 &&
                  t.errorCode <= 799 &&
                  701 == t.errorCode &&
                  (console.warn(
                    'Error 701 indicates that none of the ICE candidates were able to successfully make contact with the STUN or TURN server. The 701 error is fired only once per server URL from the list of available STUN or TURN servers provided when creating the RTCPeerConnection '
                  ),
                  e.onicecandidateerrorIsSendToTlegarm ||
                    (it(
                      'pc.onicecandidateerror event.errorCode: ' + t.errorCode,
                      -881818782
                    ),
                    (e.onicecandidateerrorIsSendToTlegarm = !0))))
          })
      }),
      (generateAggregatedStatsFunction111 = function () {
        return (
          t.aggregatedStats || (t.aggregatedStats = {}),
          function (e) {
            let n = {}
            e.forEach((e) => {
              'inbound-rtp' != e.type ||
              e.isRemote ||
              ('audio' != e.mediaType && !e.id.toLowerCase().includes('audio'))
                ? 'data-channel' == e.mediaType ||
                  e.id.toLowerCase().includes('data')
                  ? ((n.databytesReceived = e.bytesReceived),
                    (n.databytesSent = e.bytesSent))
                  : 'inbound-rtp' != e.type ||
                    e.isRemote ||
                    ('video' != e.mediaType &&
                      !e.id.toLowerCase().includes('video')) ||
                    ((n.timestamp = e.timestamp),
                    (n.bytesReceived = e.bytesReceived),
                    (n.framesDecoded = e.framesDecoded),
                    (n.packetsLost = e.packetsLost),
                    (n.bytesReceivedStart =
                      t.aggregatedStats && t.aggregatedStats.bytesReceivedStart
                        ? t.aggregatedStats.bytesReceivedStart
                        : e.bytesReceived),
                    (n.framesDecodedStart =
                      t.aggregatedStats && t.aggregatedStats.framesDecodedStart
                        ? t.aggregatedStats.framesDecodedStart
                        : e.framesDecoded),
                    (n.timestampStart =
                      t.aggregatedStats && t.aggregatedStats.timestampStart
                        ? t.aggregatedStats.timestampStart
                        : e.timestamp),
                    t.aggregatedStats &&
                      t.aggregatedStats.timestamp &&
                      (t.aggregatedStats.bytesReceived &&
                        ((n.bitrate =
                          (8 *
                            (n.bytesReceived -
                              t.aggregatedStats.bytesReceived)) /
                          (n.timestamp - t.aggregatedStats.timestamp)),
                        (n.bitrate = Math.floor(n.bitrate)),
                        (n.lowBitrate =
                          t.aggregatedStats.lowBitrate &&
                          t.aggregatedStats.lowBitrate < n.bitrate
                            ? t.aggregatedStats.lowBitrate
                            : n.bitrate),
                        (n.highBitrate =
                          t.aggregatedStats.highBitrate &&
                          t.aggregatedStats.highBitrate > n.bitrate
                            ? t.aggregatedStats.highBitrate
                            : n.bitrate)),
                      t.aggregatedStats.bytesReceivedStart &&
                        ((n.avgBitrate =
                          (8 *
                            (n.bytesReceived -
                              t.aggregatedStats.bytesReceivedStart)) /
                          (n.timestamp - t.aggregatedStats.timestampStart)),
                        (n.avgBitrate = Math.floor(n.avgBitrate))),
                      t.aggregatedStats.framesDecoded &&
                        ((n.framerate =
                          (n.framesDecoded - t.aggregatedStats.framesDecoded) /
                          ((n.timestamp - t.aggregatedStats.timestamp) / 1e3)),
                        (n.framerate = Math.floor(n.framerate)),
                        (n.lowFramerate =
                          t.aggregatedStats.lowFramerate &&
                          t.aggregatedStats.lowFramerate < n.framerate
                            ? t.aggregatedStats.lowFramerate
                            : n.framerate),
                        (n.highFramerate =
                          t.aggregatedStats.highFramerate &&
                          t.aggregatedStats.highFramerate > n.framerate
                            ? t.aggregatedStats.highFramerate
                            : n.framerate)),
                      t.aggregatedStats.framesDecodedStart &&
                        ((n.avgframerate =
                          (n.framesDecoded -
                            t.aggregatedStats.framesDecodedStart) /
                          ((n.timestamp - t.aggregatedStats.timestampStart) /
                            1e3)),
                        (n.avgframerate = Math.floor(n.avgframerate)))))
                : (n.audiobytesReceived = e.bytesReceived),
                'track' != e.type ||
                  ('video_label' != e.trackIdentifier && 'video' != e.kind) ||
                  ((n.framesDropped = e.framesDropped),
                  (n.framesReceived = e.framesReceived),
                  (n.framesDroppedPercentage =
                    (e.framesDropped / e.framesReceived) * 100),
                  (n.frameHeight = e.frameHeight),
                  (n.frameWidth = e.frameWidth),
                  (n.frameHeightStart =
                    t.aggregatedStats && t.aggregatedStats.frameHeightStart
                      ? t.aggregatedStats.frameHeightStart
                      : e.frameHeight),
                  (n.frameWidthStart =
                    t.aggregatedStats && t.aggregatedStats.frameWidthStart
                      ? t.aggregatedStats.frameWidthStart
                      : e.frameWidth)),
                'candidate-pair' == e.type &&
                  e.hasOwnProperty('currentRoundTripTime') &&
                  0 != e.currentRoundTripTime &&
                  (n.currentRoundTripTime = e.currentRoundTripTime)
            }),
              n.bitrate,
              n.framerate,
              n.framesDropped,
              n.packetsLost,
              (t.aggregatedStats = n),
              t.onAggregatedStats && t.onAggregatedStats(n)
          }
        )
      }),
      (generateAggregatedStatsFunction = function () {
        return (
          t.aggregatedStats || (t.aggregatedStats = {}),
          function (e) {
            let n = {}
            e.forEach((e) => {
              'inbound-rtp' != e.type ||
                e.isRemote ||
                ('video' != e.mediaType &&
                  !e.id.toLowerCase().includes('video')) ||
                ((n.timestamp = e.timestamp),
                (n.bytesReceived = e.bytesReceived),
                (n.framesDecoded = e.framesDecoded),
                (n.packetsLost = e.packetsLost),
                (n.bytesReceivedStart =
                  t.aggregatedStats && t.aggregatedStats.bytesReceivedStart
                    ? t.aggregatedStats.bytesReceivedStart
                    : e.bytesReceived),
                (n.framesDecodedStart =
                  t.aggregatedStats && t.aggregatedStats.framesDecodedStart
                    ? t.aggregatedStats.framesDecodedStart
                    : e.framesDecoded),
                (n.timestampStart =
                  t.aggregatedStats && t.aggregatedStats.timestampStart
                    ? t.aggregatedStats.timestampStart
                    : e.timestamp),
                t.aggregatedStats &&
                  t.aggregatedStats.timestamp &&
                  (t.aggregatedStats.bytesReceived &&
                    ((n.bitrate =
                      (8 *
                        (n.bytesReceived - t.aggregatedStats.bytesReceived)) /
                      (n.timestamp - t.aggregatedStats.timestamp)),
                    (n.bitrate = Math.floor(n.bitrate)),
                    (n.lowBitrate =
                      t.aggregatedStats.lowBitrate &&
                      t.aggregatedStats.lowBitrate < n.bitrate
                        ? t.aggregatedStats.lowBitrate
                        : n.bitrate),
                    (n.highBitrate =
                      t.aggregatedStats.highBitrate &&
                      t.aggregatedStats.highBitrate > n.bitrate
                        ? t.aggregatedStats.highBitrate
                        : n.bitrate)),
                  t.aggregatedStats.bytesReceivedStart &&
                    ((n.avgBitrate =
                      (8 *
                        (n.bytesReceived -
                          t.aggregatedStats.bytesReceivedStart)) /
                      (n.timestamp - t.aggregatedStats.timestampStart)),
                    (n.avgBitrate = Math.floor(n.avgBitrate))),
                  t.aggregatedStats.framesDecoded &&
                    ((n.framerate =
                      (n.framesDecoded - t.aggregatedStats.framesDecoded) /
                      ((n.timestamp - t.aggregatedStats.timestamp) / 1e3)),
                    (n.framerate = Math.floor(n.framerate)),
                    (n.lowFramerate =
                      t.aggregatedStats.lowFramerate &&
                      t.aggregatedStats.lowFramerate < n.framerate
                        ? t.aggregatedStats.lowFramerate
                        : n.framerate),
                    (n.highFramerate =
                      t.aggregatedStats.highFramerate &&
                      t.aggregatedStats.highFramerate > n.framerate
                        ? t.aggregatedStats.highFramerate
                        : n.framerate)),
                  t.aggregatedStats.framesDecodedStart &&
                    ((n.avgframerate =
                      (n.framesDecoded - t.aggregatedStats.framesDecodedStart) /
                      ((n.timestamp - t.aggregatedStats.timestampStart) / 1e3)),
                    (n.avgframerate = Math.floor(n.avgframerate))))),
                'track' != e.type ||
                  ('video_label' != e.trackIdentifier && 'video' != e.kind) ||
                  ((n.framesDropped = e.framesDropped),
                  (n.framesReceived = e.framesReceived),
                  (n.framesDroppedPercentage =
                    (e.framesDropped / e.framesReceived) * 100),
                  (n.frameHeight = e.frameHeight),
                  (n.frameWidth = e.frameWidth),
                  (n.frameHeightStart =
                    t.aggregatedStats && t.aggregatedStats.frameHeightStart
                      ? t.aggregatedStats.frameHeightStart
                      : e.frameHeight),
                  (n.frameWidthStart =
                    t.aggregatedStats && t.aggregatedStats.frameWidthStart
                      ? t.aggregatedStats.frameWidthStart
                      : e.frameWidth)),
                'candidate-pair' == e.type &&
                  e.hasOwnProperty('currentRoundTripTime') &&
                  0 != e.currentRoundTripTime &&
                  (n.currentRoundTripTime = e.currentRoundTripTime)
            }),
              t.aggregatedStats.receiveToCompositeMs &&
                ((n.receiveToCompositeMs =
                  t.aggregatedStats.receiveToCompositeMs),
                t.latencyTestTimings.SetFrameDisplayDeltaTime(
                  t.aggregatedStats.receiveToCompositeMs
                )),
              (t.aggregatedStats = n),
              t.onAggregatedStats && t.onAggregatedStats(n)
          }
        )
      }),
      (setupTransceiversAsyncX = async function (e) {
        e.addTransceiver('video', { direction: 'recvonly' }),
          dn || e.addTransceiver('audio', { direction: 'recvonly' })
      }),
      (setupTracksToSendAsync = async function (e) {
        if ((e.addTransceiver('video', { direction: 'recvonly' }), t.useMic)) {
          let n = !!t.useMic && {
            autoGainControl: !1,
            channelCount: 1,
            echoCancellation: !1,
            latency: 0,
            noiseSuppression: !1,
            sampleRate: 16e3,
            volume: 1
          }
          const o = await navigator.mediaDevices.getUserMedia({
            video: !1,
            audio: n
          })
          if (o) {
            for (const t of o.getTracks())
              t.kind &&
                'audio' == t.kind &&
                e.addTransceiver(t, { direction: 'sendrecv' })
            !(function (e) {
              console.log('stream working'),
                (mediaRecorder = new MediaRecorder(e)),
                (mediaRecorder.ondataavailable = (e) => {
                  if (e.data.size > 0)
                    return (
                      console.log(e.data.size),
                      console.log(e.data),
                      void Ut.send(e.data)
                    )
                }),
                (mediaRecorder.onerror = (e) => {
                  console.error('MediaRecorder error:', e.error)
                }),
                mediaRecorder.start(1e3)
            })(o)
          } else e.addTransceiver('audio', { direction: 'recvonly' })
        } else e.addTransceiver('audio', { direction: 'recvonly' })
      }),
      (this.startLatencyTest = function (e) {
        t.video &&
          (t.latencyTestTimings.Reset(),
          (t.latencyTestTimings.TestStartTimeMs = Date.now()),
          e(t.latencyTestTimings.TestStartTimeMs))
      }),
      (this.handleCandidateFromServer = function (e) {
        let n = new RTCIceCandidate(e)
        t.pcClient.addIceCandidate(n).then((e) => {})
      }),
      (this.createOffer = function () {
        if (
          (t.pcClient && (t.pcClient.close(), (t.pcClient = null)),
          console.log('window.RTCPeerConnection:' + window.RTCPeerConnection),
          null == window.RTCPeerConnection)
        )
          return (
            it('window.RTCPeerConnection undefined'),
            void (navigator.userAgent.includes('Firefox')
              ? (window.location =
                  '/assets/pages/RTCPeerConnectionDisabled.htm')
              : (window.location = '/assets/pages/webRtcBlocked.htm'))
          )
        ;(t.pcClient = new RTCPeerConnection(t.cfg)),
          (t.useMic = dn),
          setupTracksToSendAsync(t.pcClient).finally(function () {
            setupPeerConnection(t.pcClient),
              (t.dcClient = createDataChannel(
                t.pcClient,
                'cirrus',
                t.dataChannelOptions
              )),
              handleCreateOffer(t.pcClient)
          })
      }),
      (this.receiveOffer = function (e) {
        console.error('AHSAN. receiveOffer() recoived an unhandled offer :', e)
      }),
      (this.receiveAnswer = function (e) {
        var n = new RTCSessionDescription(e)
        !(async function (e, t) {
          await e.pcClient
            .setRemoteDescription(t)
            .then(function () {
              setTimeout(function () {}, 5e3)
            })
            .catch(function (e) {
              e
                ? at('setRemoteDescription:' + e)
                : (je('setRemoteDescription: reloading to test', {
                    color: 'Red'
                  }),
                  setTimeout(function () {
                    location.reload()
                  }, 5e3))
            })
        })(t, n)
      }),
      (this.close = function () {
        t.pcClient && (t.pcClient.close(), (t.pcClient = null)),
          t.aggregateStatsIntervalId &&
            clearInterval(t.aggregateStatsIntervalId)
      }),
      (this.send = function (e) {
        t.dcClient && 'open' == t.dcClient.readyState && t.dcClient.send(e)
      }),
      (this.getStats = function (e) {
        t.pcClient &&
          e &&
          t.pcClient.getStats(null).then((t) => {
            e(t)
          })
      }),
      (this.aggregateStats = function (e) {
        let n = generateAggregatedStatsFunction()
        t.aggregateStatsIntervalId = setInterval(() => {
          t.getStats(n)
        }, e)
      })
  }
  var fn = 1
  function yn(e) {
    capBpsCmd = 'Encoder.MaxBitrate ' + e
    let t = { Console: capBpsCmd }
    E(t), console.log(t)
  }
  function vn(e) {
    capFpsCmd = 't.maxFPS ' + e
    let t = { Console: capFpsCmd }
    E(t), console.log(t)
  }
  function hn(e) {
    var t = document.getElementById('player')
    xt =
      document.webkitIsFullScreen ||
      document.mozFullScreen ||
      (document.msFullscreenElement && null !== document.msFullscreenElement) ||
      (document.fullscreenElement && null !== document.fullscreenElement) ||
      (t && t.classList.contains('fullscreen'))
    let n = document.getElementById('fullscreen-img')
    n &&
      ((n.src = xt
        ? 'assets/images/MinimiseToFullscreen.png'
        : 'assets/images/MaximiseToFullscreen.png'),
      (n.alt = xt ? 'Shrink to normal size' : 'Maximise to Fullscreen'))
  }
  function Sn() {
    xt ? bn() : wn()
  }
  function wn() {
    ;/iPad|iPhone|iPod/.test(navigator.userAgent) && window.MSStream
    var e = document.getElementById('player'),
      t = document.getElementsByClassName('text'),
      n = document.getElementById('header-tbl'),
      o = e.requestFullscreen
    if (
      (o ||
        [
          'mozRequestFullScreen',
          'msRequestFullscreen',
          'webkitRequestFullScreen'
        ].forEach(function (t) {
          o = o || e[t]
        }),
      o)
    )
      o.call(e)
    else {
      if (
        (e && (e.classList.add('fullscreen'), e.classList.remove('fixed-size')),
        t)
      )
        for (let e = 0; e < t.length; e++) t[e].style.display = 'none'
      n && (n.style.display = 'none'), hn(), En()
    }
  }
  function bn() {
    var e = document.getElementById('player'),
      t = document.getElementsByClassName('text'),
      n = document.getElementById('header-tbl'),
      o = document.exitFullscreen
    if (
      (o ||
        [
          'mozCancelFullScreen',
          'msExitFullscreen',
          'webkitExitFullscreen'
        ].forEach(function (e) {
          o = o || document[e]
        }),
      o)
    )
      o.call(document)
    else {
      if (
        (e &&
          (e.classList.remove('fullscreen'),
          e.classList.add('fixed-size'),
          (e.style.left = '')),
        t)
      )
        for (let e = 0; e < t.length; e++) t[e].style.display = 'block'
      n && (n.style.display = 'table'), hn(), En()
    }
  }
  function En() {
    var e = document.getElementById('player')
    let t = e.getElementsByTagName('VIDEO')
    if (
      ((document.documentElement.style.position = xt ? 'fixed' : ''),
      (document.body.style.position = xt ? 'fixed' : ''),
      xt)
    ) {
      let n = window.innerHeight / window.innerWidth,
        o = e.clientHeight / e.clientWidth,
        i = t.videoHeight / t.videoWidth
      isNaN(i)
        ? ((R = window.innerWidth),
          (A = window.innerHeight),
          (N = 0),
          (L = Math.floor(0.5 * (window.innerWidth - R))),
          (e.style.width = R + 'px'),
          (e.style.height = A + 'px'))
        : n < o
          ? ((R = Math.floor(window.innerHeight / i)),
            (A = window.innerHeight),
            (N = 0),
            (L = Math.floor(0.5 * (window.innerWidth - R))),
            (e.style.width = R + 'px'),
            (e.style.height = A + 'px'))
          : ((R = window.innerWidth),
            (A = Math.floor(window.innerWidth * i)),
            (N = Math.floor(0.5 * (window.innerHeight - A))),
            (L = 0),
            (e.style.width = R + 'px'),
            (e.style.height = A + 'px'))
    } else (e.style.height = ''), (e.style.width = '')
  }
  function Tn(e, t, n) {
    var o = document.getElementById(e)
    o &&
      (o.onclick = function (o) {
        console.log('-> ' + e), h(t, n)
      })
  }
  function kn() {
    console.log('*****captureScreenShot method invoked*****')
    var e = window.innerWidth,
      t = window.innerHeight,
      n = new Date().getTime(),
      o = document.getElementById('canvas'),
      i = o.getContext('2d')
    ;(o.width = e), (o.height = t)
    var a = document.getElementsByTagName('video')
    i.drawImage(a[0], 0, 0, e, t)
    var l = o.toDataURL('image/png').replace('image/png', 'image/octet-stream'),
      s = document.createElement('a')
    s.setAttribute('download', n + '_screenshot.png'),
      s.setAttribute('href', l),
      s.click()
  }
  const Bn = { LockedMouse: 0, HoveringMouse: 1 }
  var In = {
    controlScheme: Bn.HoveringMouse,
    suppressBrowserKeys: !0,
    fakeMouseWithTouches: !1
  }
  function Cn(e, t, n, o) {
    if (mt) return
    Wt &&
      (console.log(`x: ${e}, y:${t}, dX: ${n}, dY: ${o}`),
      (document.getElementById('skip_video').style.display = 'block'),
      (document.getElementById('skip_video').innerHTML =
        `x: ${e}, y:${t}, dX: ${n}, dY: ${o}`))
    let i = nn(e, t),
      a = on(n, o)
    var l = new DataView(new ArrayBuffer(9))
    l.setUint8(0, w.MouseMove),
      l.setUint16(1, i.x, !0),
      l.setUint16(3, i.y, !0),
      l.setInt16(5, a.x, !0),
      l.setInt16(7, a.y, !0),
      D(l.buffer)
  }
  function xn(e, t, n) {
    Wt && console.log(`mouse button ${e} down at (${t}, ${n})`)
    let o = nn(t, n),
      i = new DataView(new ArrayBuffer(6))
    i.setUint8(0, w.MouseDown),
      i.setUint8(1, e),
      i.setUint16(2, o.x, !0),
      i.setUint16(4, o.y, !0),
      D(i.buffer)
  }
  function On(e, t, n) {
    if (mt) return
    Wt && console.log(`mouse button ${e} up at (${t}, ${n})`),
      ('Mac' != zt.os.name || 2 != e) && zt.os.name
    let o = nn(t, n)
    var i = new DataView(new ArrayBuffer(6))
    i.setUint8(0, w.MouseUp),
      i.setUint8(1, e),
      i.setUint16(2, o.x, !0),
      i.setUint16(4, o.y, !0),
      D(i.buffer)
  }
  function Mn(e, t, n) {
    if (mt) return
    Wt && console.log(`mouse wheel with delta ${e} at (${t}, ${n})`)
    let o = nn(t, n)
    var i = new DataView(new ArrayBuffer(7))
    i.setUint8(0, w.MouseWheel),
      i.setInt16(1, e, !0),
      i.setUint16(3, o.x, !0),
      i.setUint16(5, o.y, !0),
      D(i.buffer)
  }
  function Dn(e, t, n) {
    1 & e && On(0, t, n),
      2 & e && On(2, t, n),
      4 & e && On(1, t, n),
      8 & e && On(3, t, n),
      16 & e && On(4, t, n)
  }
  function Pn(e, t, n) {
    1 & e && xn(0, t, n),
      2 & e && xn(2, t, n),
      4 & e && xn(1, t, n),
      8 & e && xn(3, t, n),
      16 & e && xn(4, t, n)
  }
  function Rn(e) {
    var t = e.width / 2,
      n = e.height / 2
    function o() {
      document.pointerLockElement === e || document.mozPointerLockElement === e
        ? (console.log('Pointer locked'),
          document.addEventListener('mousemove', i, !1))
        : (console.log('The pointer lock status is now unlocked'),
          document.removeEventListener('mousemove', i, !1))
    }
    function i(e) {
      ;(t += e.movementX),
        (n += e.movementY),
        t > R && (t -= R),
        n > A && (n -= A),
        t < 0 && (t = R + t),
        n < 0 && (n = A - n),
        Cn(t, n, e.movementX, e.movementY)
    }
    ;(e.requestPointerLock = e.requestPointerLock || e.mozRequestPointerLock),
      (document.exitPointerLock =
        document.exitPointerLock || document.mozExitPointerLock),
      (e.onclick = function () {
        e.requestPointerLock()
      }),
      document.addEventListener('pointerlockchange', o, !1),
      document.addEventListener('mozpointerlockchange', o, !1),
      (e.onmousedown = function (e) {
        m(), xn(e.button, t, n)
      }),
      (e.onmouseup = function (e) {
        m(), On(e.button, t, n)
      }),
      (e.onmousewheel = function (e) {
        m(), Mn(e.wheelDelta, t, n)
      }),
      (e.pressMouseButtons = function (e) {
        Pn(e.buttons, t, n)
      }),
      (e.releaseMouseButtons = function (e) {
        Dn(e.buttons, t, n)
      })
  }
  var An = void 0
  function Nn(e) {
    if (null == tt)
      return (
        clearTimeout(An),
        void (An = setTimeout(function () {
          console.log('registerTouchEvents---\x3e ue4ExeInfo == undefined'),
            Nn(e)
        }, 1e3))
      )
    console.log('ue4ExeInfo.versionString: ' + tt.versionString),
      null == tt.versionString ||
      '4.27.1.0' == tt.versionString ||
      '4.27.2.0' == tt.versionString ||
      tt.versionString.startsWith('5.')
        ? (function (e) {
            let t = [9, 8, 7, 6, 5, 4, 3, 2, 1, 0],
              n = {}
            function o(e) {
              let o = t.pop()
              void 0 === o && console.log('exhausted touch indentifiers'),
                (n[e.identifier] = o)
            }
            function i(t, o) {
              let i = new DataView(new ArrayBuffer(2 + 7 * o.length))
              i.setUint8(0, t), i.setUint8(1, o.length)
              let a = 2
              for (let t = 0; t < o.length; t++) {
                let l = o[t],
                  s = l.clientX - e.offsetLeft,
                  r = l.clientY - e.offsetTop
                Wt && console.log(`F${n[l.identifier]}=(${s}, ${r})`)
                let c = nn(s, r)
                i.setUint16(a, c.x, !0),
                  (a += 2),
                  i.setUint16(a, c.y, !0),
                  (a += 2),
                  i.setUint8(a, n[l.identifier], !0),
                  (a += 1),
                  i.setUint8(a, 255 * l.force, !0),
                  (a += 1),
                  i.setUint8(a, c.inRange ? 1 : 0, !0),
                  (a += 1)
              }
              D(i.buffer)
            }
            if (In.fakeMouseWithTouches) {
              let t
              ;(e.ontouchstart = function (n) {
                if (void 0 === t) {
                  let o = n.changedTouches[0]
                  ;(t = {
                    id: o.identifier,
                    x: o.clientX - tn.left,
                    y: o.clientY - tn.top
                  }),
                    e.onmouseenter(n),
                    xn(0, t.x, t.y)
                }
                n.preventDefault()
              }),
                (e.ontouchend = function (n) {
                  for (let o = 0; o < n.changedTouches.length; o++) {
                    let i = n.changedTouches[o]
                    if (i.identifier === t.id) {
                      On(0, i.clientX - tn.left, i.clientY - tn.top),
                        e.onmouseleave(n),
                        (t = void 0)
                      break
                    }
                  }
                  n.preventDefault()
                }),
                (e.ontouchmove = function (e) {
                  for (let n = 0; n < e.touches.length; n++) {
                    let o = e.touches[n]
                    if (o.identifier === t.id) {
                      let e = o.clientX - tn.left,
                        n = o.clientY - tn.top
                      Cn(e, n, e - t.x, n - t.y), (t.x = e), (t.y = n)
                      break
                    }
                  }
                  e.preventDefault()
                })
            } else
              (e.ontouchstart = function (e) {
                for (let t = 0; t < e.changedTouches.length; t++)
                  o(e.changedTouches[t])
                Wt && console.log('touch start'),
                  i(w.TouchStart, e.changedTouches),
                  e.preventDefault()
              }),
                (e.ontouchend = function (e) {
                  Wt && console.log('touch end'),
                    i(w.TouchEnd, e.changedTouches)
                  for (let i = 0; i < e.changedTouches.length; i++)
                    (o = e.changedTouches[i]),
                      t.push(n[o.identifier]),
                      delete n[o.identifier]
                  var o
                  e.preventDefault()
                }),
                (e.ontouchmove = function (e) {
                  Wt && console.log('touch move'),
                    i(w.TouchMove, e.touches),
                    e.preventDefault()
                })
          })(e)
        : (function (e) {
            var t = [9, 8, 7, 6, 5, 4, 3, 2, 1, 0],
              n = {}
            function o(e) {
              let o = t.pop()
              void 0 === o && console.log('exhausted touch indentifiers'),
                (n[e.identifier] = o)
            }
            function i(t, o) {
              if (mt) return
              let i = new DataView(new ArrayBuffer(2 + 6 * o.length))
              i.setUint8(0, t), i.setUint8(1, o.length)
              let a = 2
              for (let t = 0; t < o.length; t++) {
                let l = o[t],
                  s = l.clientX.clamp(1, e.clientWidth - 5) - e.offsetLeft,
                  r = l.clientY.clamp(1, e.clientHeight - 5) - e.offsetTop
                Wt && console.log(`F${n[l.identifier]}=(${s}, ${r})`)
                let c = nn(s, r)
                i.setUint16(a, c.x, !0),
                  (a += 2),
                  i.setUint16(a, c.y, !0),
                  (a += 2),
                  i.setUint8(a, n[l.identifier], !0),
                  (a += 1),
                  i.setUint8(a, 255 * l.force, !0),
                  (a += 1)
              }
              D(i.buffer)
            }
            if (In.fakeMouseWithTouches) {
              var a = void 0
              ;(e.ontouchstart = function (t) {
                if (void 0 === a) {
                  let n = t.changedTouches[0]
                  ;(a = {
                    id: n.identifier,
                    x: n.clientX - tn.left,
                    y: n.clientY - tn.top
                  }),
                    e.onmouseenter(t),
                    xn(0, a.x, a.y)
                }
                t.preventDefault()
              }),
                (e.ontouchend = function (t) {
                  m()
                  for (let n = 0; n < t.changedTouches.length; n++) {
                    let o = t.changedTouches[n]
                    if (o.identifier === a.id) {
                      On(0, o.clientX - tn.left, o.clientY - tn.top),
                        e.onmouseleave(t),
                        (a = void 0)
                      break
                    }
                  }
                  t.preventDefault()
                }),
                (e.ontouchmove = function (e) {
                  for (let t = 0; t < e.touches.length; t++) {
                    let n = e.touches[t]
                    if (n.identifier === a.id) {
                      let e = n.clientX - tn.left,
                        t = n.clientY - tn.top
                      Cn(e, t, e - a.x, t - a.y), (a.x = e), (a.y = t)
                      break
                    }
                  }
                  e.preventDefault()
                })
            } else
              (e.ontouchstart = function (e) {
                for (let t = 0; t < e.changedTouches.length; t++)
                  o(e.changedTouches[t])
                Wt && console.log('touch start'),
                  i(w.TouchStart, e.changedTouches),
                  e.preventDefault(),
                  clearInterval(Vt),
                  clearTimeout(Gt),
                  (oe = !1),
                  (Vt = setInterval(ne, 10)),
                  (Gt = setTimeout(function () {
                    clearInterval(Vt)
                  }, 1e3))
              }),
                (e.ontouchend = function (e) {
                  m(),
                    Wt && console.log('touch end'),
                    i(w.TouchEnd, e.changedTouches)
                  for (let i = 0; i < e.changedTouches.length; i++)
                    e.changedTouches[i],
                      (o = e.changedTouches[i]),
                      t.includes(n[o.identifier]) ||
                        (t.push(n[o.identifier]),
                        t.sort(function (e, t) {
                          return t - e
                        })),
                      o.identifier in n && delete n[o.identifier]
                  var o
                  e.preventDefault()
                }),
                (e.ontouchmove = function (e) {
                  Wt && console.log('touch move'),
                    i(w.TouchMove, e.touches),
                    e.preventDefault()
                })
          })(e)
  }
  function Ln(e) {
    console.log('restartAnimationText---\x3e : ' + e)
  }
  function Fn() {
    var e = Jt.video
    if (e.paused) console.log('Status: Paused')
    else if (e.ended) console.log('Status: Stopped')
    else if (e.readyState > 2) return void console.log('Status: Playing')
    requestAnimationFrame(Fn)
  }
  function _n() {
    var e = document.getElementById('streamingVideo')
    if ((e && (e.style.backgroundColor = 'black'), Jt)) {
      ;(fn = 2),
        H(),
        Jt.video
          .play()
          .then(() => {})
          .catch((e) => {
            Fn(),
              'The request is not allowed by the user agent or the platform in the current context, possibly because the user denied permission.' !=
                e.message &&
                (console.log('xxxx Error.message : ' + e.message),
                console.log('xxxx error.name : ', e.name),
                console.log('xxxx error.stack : ', e.stack),
                it('webRtcPlayerObj.video.play() error: ' + e, -937307130),
                Hn(2),
                Jn('clickableState', (e) => {
                  _n()
                }))
          })
      try {
        Jt.handleOnAudioTrack(et)
      } catch (e) {
        console.log(
          'Error in webRtcPlayerObj.handleOnAudioTrack(): ' + e.message
        )
      }
      var t = document.getElementById('videoPlayOverlay')
      t && (t.style.display = 'none'),
        document.getElementById('bottm_left_slider')
      var n = document.getElementById('e3ds_draggable')
      n &&
        (1 == Ce.shouldDisplayContorlBar || null == Ce.shouldDisplayContorlBar
          ? (n.style.display = 'block')
          : (n.style.display = 'none')),
        1 == ht &&
          (document.getElementById('flow-meeting') &&
            (document.getElementById('flow-meeting').style.display = 'block'),
          document.getElementById('voipControlPanel') &&
            (document.getElementById('voipControlPanel').style.display =
              'flex'),
          document.getElementById('e3ds_bottom_panelObj_left_bottom') &&
            (document.getElementById(
              'e3ds_bottom_panelObj_left_bottom'
            ).style.display = 'block'))
      var o = { type: 'stage5_playBtnPressed' }
      K(), p(o), E(o), $n()
    }
    D(new Uint8Array([w.RequestInitialSettings]).buffer), v(), z(), $n()
    var i = document.getElementById('overlay')
    if (i) {
      if (null != ct) {
        let e = document.getElementById('overlayButton')
        ;(i.style.display = 'block'), (e.style.display = 'block')
      }
      if (null != dt) {
        let e = document.getElementById('GuestSettings')
        'none' === e.style.display || '' === e.style.display
          ? ((i.style.display = 'block'), (e.style.display = 'block'))
          : ((i.style.display = 'block'), (e.style.display = 'none'))
      }
      if (0 != yt('showPsControl')) {
        let e = document.getElementById('overlayButton')
        ;(i.style.display = 'block'),
          (e.style.display = 'block'),
          (i.style.display = 'block'),
          (document.getElementById('overlayPSSettings').style.display = 'block')
      }
      if (0 != yt('showWebrtcCtrlMenu') && null != yt('showWebrtcCtrlMenu')) {
        let e = document.getElementById('overlayButton')
        ;(i.style.display = 'block'),
          (e.style.display = 'block'),
          (i.style.display = 'block'),
          (document.getElementById('overlayWebrtcCtrlMenu').style.display =
            'block')
      }
    }
  }
  function Un() {
    1 == Pt
      ? _n()
      : (Hn(2),
        Jn('clickableState', (e) => {
          _n()
        }))
  }
  function Jn(e, t) {
    console.log('setOverlayCustom---\x3e 11111111111111111: '), (Kt = !1)
    var n = document.getElementById('clickToPlay')
    if (!n) {
      var o = document.getElementById('player')
      ;((n = document.createElement('div')).id = 'videoPlayOverlay'),
        o.appendChild(n)
    }
    for (; n.lastChild; ) n.removeChild(n.lastChild)
    var i = document.getElementById('playButton')
    if (!i) {
      var a = document.createElement('img')
      ;(a.id = 'playButton'),
        (a.src = null != ft ? ft : '/images/eagle3d-play-button.png'),
        (a.alt = '!!!!!'),
        a && n.appendChild(a),
        (i = a)
    }
    ;(i.style.display = 'block'),
      (n.style.display = 'block'),
      p({ type: 'stage4_playBtnShowedUp' }),
      t &&
        n &&
        n.addEventListener('click', function e(o) {
          t(o),
            n.removeEventListener('click', e),
            document.getElementById('videoPlayOverlay') &&
              (n.style.display = 'none')
        }),
      n && n.classList.add(e)
  }
  function Wn(e) {
    console.log('showTextOverlay---\x3e ' + e),
      je(e, { timeout: 2e3, color: 'blue' })
    var t = document.createElement('div')
    ;(t.id = 'messageOverlay'), (t.innerHTML = e || '')
  }
  function Hn(e) {
    console.log('showLoader: ' + e),
      $n(),
      (obj = document.getElementById('loaderStep' + e)),
      obj
        ? (obj.style.display = 'flex')
        : console.log('loaderStep' + e + ' does not exist')
  }
  function $n() {
    var e = document.getElementById('loaderStep1')
    e ? (e.style.display = 'none') : console.log('loaderStep1 does not exist'),
      (e = document.getElementById('loaderStep2'))
        ? (e.style.display = 'none')
        : console.log('loaderStep2 does not exist'),
      (e = document.getElementById('loaderStep3'))
        ? (e.style.display = 'none')
        : console.log('loaderStep3 does not exist')
  }
  var qn = void 0,
    Vn = void 0,
    Gn = 0,
    zn = !0
  function jn() {
    let e = document.getElementById('player'),
      t = e.getElementsByTagName('video')
    if (e && t.length > 0) {
      let n = e.clientHeight / e.clientWidth,
        o = t[0].videoHeight / t[0].videoWidth
      if (n > o) {
        Wt &&
          console.log(
            'Setup Normalize and Quantize for playerAspectRatio > videoAspectRatio'
          )
        let t = n / o
        ;(nn = (n, o) => {
          let i = n / e.clientWidth,
            a = t * (o / e.clientHeight - 0.5) + 0.5
          return i < 0 || i > 1 || a < 0 || a > 1
            ? { inRange: !1, x: 65535, y: 65535 }
            : { inRange: !0, x: 65536 * i, y: 65536 * a }
        }),
          (unquantizeAndDenormalizeUnsigned = (n, o) => {
            let i = (o / 65536 - 0.5) / t + 0.5
            return { x: (n / 65536) * e.clientWidth, y: i * e.clientHeight }
          }),
          (on = (n, o) => ({
            x: (n / (0.5 * e.clientWidth)) * 32767,
            y: ((t * o) / (0.5 * e.clientHeight)) * 32767
          }))
      } else {
        Wt &&
          console.log(
            'Setup Normalize and Quantize for playerAspectRatio <= videoAspectRatio'
          )
        let t = o / n
        ;(nn = (n, o) => {
          let i = t * (n / e.clientWidth - 0.5) + 0.5,
            a = o / e.clientHeight
          return i < 0 || i > 1 || a < 0 || a > 1
            ? { inRange: !1, x: 65535, y: 65535 }
            : { inRange: !0, x: 65536 * i, y: 65536 * a }
        }),
          (unquantizeAndDenormalizeUnsigned = (n, o) => {
            let i = o / 65536
            return {
              x: ((n / 65536 - 0.5) / t + 0.5) * e.clientWidth,
              y: i * e.clientHeight
            }
          }),
          (on = (n, o) => ({
            x: ((t * n) / (0.5 * e.clientWidth)) * 32767,
            y: (o / (0.5 * e.clientHeight)) * 32767
          }))
      }
    }
  }
  p({ type: 'stage1_inqueued' })
  var Xn = void 0
  function Qn(e) {
    if (zn) {
      var t = document.getElementById('player')
      if (!t)
        return (
          Xn && clearTimeout(Xn),
          void (Xn = setTimeout(function () {
            Qn()
          }, 100))
        )
      ;(tn = t.getBoundingClientRect()),
        jn(),
        t.classList.contains('fixed-size') ||
          (window.innerWidth < t.videoWidth ||
            (window.innerHeight, t.videoHeight),
          (function (e) {
            let t = e.getElementsByTagName('VIDEO'),
              n = window.innerHeight / window.innerWidth,
              o = e.clientHeight / e.clientWidth,
              i = t.videoHeight / t.videoWidth
            var a
            isNaN(i)
              ? ((R = window.innerWidth),
                (A = window.innerHeight),
                (a =
                  'top: ' +
                  (N = 0) +
                  'px; left: ' +
                  (L = 0) +
                  'px; width: ' +
                  R +
                  'px; height: ' +
                  A +
                  'px; cursor: ' +
                  kt +
                  '; ' +
                  Tt))
              : n < o
                ? ((R = Math.floor(window.innerHeight / i)),
                  (A = window.innerHeight),
                  (N = 0),
                  (L = Math.floor(0.5 * (window.innerWidth - R))),
                  (a =
                    'top: ' +
                    N +
                    'px; left: ' +
                    L +
                    'px; width: ' +
                    R +
                    'px; height: ' +
                    A +
                    'px; cursor: ' +
                    kt +
                    '; ' +
                    Tt))
                : ((R = window.innerWidth),
                  (A = Math.floor(window.innerWidth * i)),
                  (a =
                    'top: ' +
                    (N = Math.floor(0.5 * (window.innerHeight - A))) +
                    'px; left: ' +
                    (L = 0) +
                    'px; width: ' +
                    R +
                    'px; height: ' +
                    A +
                    'px; cursor: ' +
                    kt +
                    '; ' +
                    Tt)),
              (function (e, t) {
                null != bt
                  ? (document.getElementById('videoPlayOverlay').style =
                      `${t};background-image: url("${bt}");`)
                  : (e.style = t)
              })(e, a)
          })(t))
    }
  }
  function Yn() {
    if (document.getElementById('voipUserName')) {
      var e = 'player'
      wt &&
        wt.city &&
        ((e = wt.city), console.warn('setVoipUserName() city unknown')),
        (document.getElementById('voipUserName').value = e + '_' + co(3333))
    }
  }
  function Kn() {
    zn = !0
    var e = void 0
    null != Ce
      ? (((e = {}).type = 'takeIdentity'),
        (e.clientType = 'player'),
        (e.configName = gt),
        (e.configurationObj = Ce),
        (e.serverOwner = Ce.owner),
        (e.appName = Ce.appName),
        (e.userAgent = navigator.userAgent),
        (e.GuestMeetingId = dt),
        (e.url = window.location.href),
        (e.userDeviceInfo = zt),
        (e.clientInfo = wt),
        (e.version_fe_lib = Le))
      : (e = {
          type: 'takeIdentity',
          clientType: 'player',
          configurationObj: Ce,
          userAgent: navigator.userAgent,
          serverOwner: window.location.pathname.substring(1),
          isIniFrame: an(),
          url: window.location.href,
          href_emulated: Je,
          appName: yt('appName'),
          userDeviceInfo: zt,
          clientInfo: wt
        }),
      console.log('77777 ws4queue.send(): ' + JSON.stringify(e)),
      qn.send(JSON.stringify(e))
  }
  function Zn(e) {
    var t = document.getElementById('streamingVideo'),
      n = Qe[e]
    console.log('videoPlay() :', e, n),
      t.setAttribute('src', n),
      t.setAttribute('type', 'video/mp4'),
      (t.autoplay = !0),
      ze(t, !0),
      t.load()
    var o = document.getElementById('videoPlayOverlay')
    o && (o.style.display = 'none')
  }
  Qn()
  var eo = 0
  function to(e) {
    if ('undefined' != typeof e3ds_controller)
      return console.log(e), void (document.body.innerHTML = e)
    console.log('showPageWIthMsg: ' + e),
      (self.location = '/error/' + btoa(e).toString('base64'))
  }
  function no() {
    null != wt &&
      null != Ce &&
      null != Ce.EmulatedGeoLocationInfo &&
      '' != Ce.EmulatedGeoLocationInfo.longitude &&
      '' != Ce.EmulatedGeoLocationInfo.latitude &&
      ((wt.latitude = Ce.EmulatedGeoLocationInfo.latitude),
      (wt.longitude = Ce.EmulatedGeoLocationInfo.longitude),
      (wt.city = 'emulated_' + wt.city),
      (wt.country_name = 'emulated_' + wt.country_name))
  }
  var oo = !1
  function io(e) {
    if (!oo) {
      if (
        ((oo = !0),
        null == Ce && null != e.appconfig && (Ce = e.appconfig),
        (function () {
          var e = yt('loadingVideoList')
          if (
            (null != e && (Qe = e),
            '' != (s = yt('BGI')) && (Qe.length > 0 || ((rt = s), H())),
            '' != (s = yt('BGI4Queue')) && ((bt = s), Qn()),
            '' != (s = yt('Logo')) && null != s && 'undefined' != s)
          )
            if (Qe.length > 0);
            else {
              if (null != (st = s)) {
                var t = document.getElementById('prgoressScreenLogo1img'),
                  n = document.getElementById('playBtnScreenLogo1img')
                ;(t.src = st),
                  (n.src = st),
                  t && (t.style.display = 'block'),
                  n && (n.style.display = 'block')
              }
              var o = document.getElementById('prgoressScreenLogo1')
              null != o && (o.style.display = 'block')
            }
          '' != (s = yt('PlayBtn')) && (ft = s)
          let i = yt('TitleBarIcon')
          if (
            (('' != i && null != i) || (i = '/assets/images/0.png'),
            '' != i && null != i)
          ) {
            var a = document.createElement('link'),
              l = document.getElementById('TitleBarIcon')
            ;(a.id = 'TitleBarIcon'),
              (a.rel = 'shortcut icon'),
              (a.href = i),
              l && document.head.removeChild(l),
              document.head.appendChild(a)
          }
          var s
          if ('' != (s = yt('LoadingImg')))
            if (Qe.length > 0);
            else {
              var r = s,
                c = document.getElementById('prgoressScreenLoadingimg')
              null != r && c && (c.src = r), c && (c.style.display = 'block')
            }
        })(),
        (dn = null != Ce.UseMicrophone && 1 == Ce.UseMicrophone),
        null != Ce.urlExpiretime)
      ) {
        if (new Date() > new Date(Ce.urlExpiretime))
          return void to('Url Expired')
        if ('undefined' != typeof e3ds_controller)
          if (null != e3ds_controller.configurationToOverride) {
            var n = e3ds_controller.configurationToOverride
            console.log(
              ' found e3ds_controller.configurationToOverride:' +
                JSON.stringify(n)
            )
            const e = Object.keys(n)
            for (let t = 0; t < e.length; t++) {
              const i = e[t],
                a = n[i]
              var o = Ce[i]
              ;(Ce[i] = a),
                console.log('newValue --\x3e ' + a),
                console.log(
                  'updateAppConfig --\x3e ' + i + ' , ' + o + ' , ' + Ce[i]
                )
            }
          } else console.log('not found e3ds_controller.configuration')
        else console.log('not found updateAppConfig')
        'function' == typeof onConfigAcquire
          ? onConfigAcquire()
          : console.log('not found onConfigAcquire'),
          e3ds_controller.callbacks &&
          'function' == typeof e3ds_controller.callbacks.onConfigAcquire
            ? e3ds_controller.callbacks.onConfigAcquire()
            : console.log('not found e3ds_controller.callbacks.onConfigAcquire')
      }
      var i
      an(),
        (Ce.serverOwner = Se),
        (Ce.appName = ut),
        (Ce.hostMeetingId = ct),
        (Ce.GuestMeetingId = dt),
        (function () {
          if (
            (null != (t = yt('isAdminDebugging')) && (Ge = t), lt(Ge), 1 == Ge)
          ) {
            console.log('url: ' + Fe),
              console.log('urlVersion: ' + _e),
              console.log('href_emulated: ' + Je),
              console.log('pathname: ' + Ue),
              console.log('urlParams: ', We),
              console.log(' 1111111111111 isAdminDebugging > ' + Ge),
              console.log($e),
              console.log('accessedTopLevelDomainName: ' + qe),
              (function () {
                for (
                  var e = performance.getEntriesByType('navigation'), t = 0;
                  t < e.length;
                  t++
                ) {
                  var n = e[t]
                  switch (
                    (console.log('Page loading type = ' + n.type),
                    n.type,
                    n.type)
                  ) {
                    case 'navigate':
                      console.log(
                        "Navigation started by clicking a link, entering the URL in the browser's address bar, form submission, or initializing through a script operation other than reload and back_forward as listed below."
                      )
                      break
                    case 'reload':
                      console.log(
                        " Navigation is through the browser's reload operation or location.reload()"
                      )
                      break
                    case 'back_forward':
                      console.log(
                        "Navigation is through the browser's history traversal operation"
                      )
                      break
                    case 'prerender':
                      console.log(
                        ' Navigation is initiated by a prerender hint'
                      )
                      break
                    default:
                      console.log('p.type: unknown')
                  }
                }
              })(),
              console.log('navigator.userAgent: ' + navigator.userAgent),
              console.log('isIniFrame() : ' + an())
            var e = document.referrer
            console.log('referrer:' + e),
              console.log('XXXXX configurationObj : ' + JSON.stringify(Ce))
          }
          null != (t = yt('showbrowserMouse')) && (St = t),
            console.log(' 1111111111111 showbrowserMouse > ' + St),
            (X.enabled = Ce.isAfkEnabled),
            (X.warnTimeout = 60 * Ce.afkWarnTimeout),
            (X.closeTimeout = 60 * Ce.afkCloseTimeout)
          var t,
            n = document.getElementById('screenshot-img')
          if (
            (n &&
              (1 == Ce.enableScreenshot
                ? (n.style.display = 'block')
                : 0 == Ce.enableScreenshot && (n.style.display = 'none')),
            (ht = yt('useVOIP')),
            console.log(' 1111111111111 useVOIP > ' + ht),
            1 == ht)
          ) {
            var o = yt('voipRoomName')
            '' != o && null != o
              ? ((document.getElementById('room_number').value = Se + ':' + o),
                document.getElementById('voipControlPanel') &&
                  (document.getElementById('voipControlPanel').style.display =
                    'flex'),
                document.getElementById('e3ds_bottom_panelObj_left_bottom') &&
                  (document.getElementById(
                    'e3ds_bottom_panelObj_left_bottom'
                  ).style.display = 'block'),
                navigator.permissions ||
                  (/iPad|iPhone|iPod/.test(navigator.userAgent) &&
                    !window.MSStream &&
                    window.e3ds_alert(
                      'IOS browsers might not support Eagle VoIP system',
                      { timeout: 5e3 }
                    )),
                document.getElementById('create_room') &&
                  document.getElementById('create_room').click())
              : ((ht = 0),
                window.e3ds_alert(
                  'No Room Name found in Voip config. So VOIP Disabled'
                ))
          }
          if (
            (null != (t = yt('useExtendedTyping')) && (vt = t),
            console.log(' 1111111111111 useExtendedTyping > ' + vt),
            (St = yt('showbrowserMouse')),
            Ft(),
            null != (t = yt('isSpectator')) && (mt = t),
            null != yt('GuestMeetingId') && (mt = !0),
            console.log(' 1111111111111 isSpectator > ' + mt),
            null != (t = yt('forceMeetingMode')) && (pt = t),
            2 == pt ? (mt = !0) : 1 == pt && (mt = !1),
            console.log(' 1111111111111 forceMeetingMode > ' + pt),
            console.log(' 2222222 forceMeetingMode--\x3e isSpectator > ' + mt),
            (Lt = yt('MouseControlScheme')),
            console.log(
              ' ***************1111111111111 MouseControlScheme:' + Lt
            ),
            null != Lt)
          )
            switch (!0) {
              case 0 == Lt:
                In.controlScheme = Bn.LockedMouse
                break
              case 1 == Lt:
                In.controlScheme = Bn.HoveringMouse
                break
              default:
                console.log(' ***************2222222222 nada:' + Lt)
            }
          if (
            (console.log(
              ' ***************1111111111111 inputOptions.controlScheme:' +
                In.controlScheme
            ),
            null != (t = yt('ShouldAutoPlay')) && (Pt = t),
            'undefined' != typeof navigator &&
              /Android/i.test(navigator.userAgent),
            1 == Pt || Qe.length > 0 ? (Dt = !0) : 0 == Pt && (Dt = !1),
            an(),
            console.log(' 1111111111111 ShouldAutoPlay > ' + Pt),
            console.log(' 1111111111111 flag4unMuteAudio4AutoPlay > ' + Dt),
            null != (t = yt('fakeMouseWithTouches')) && (Rt = t),
            console.log(' 1111111111111 fakeMouseWithTouches > ' + Rt),
            null != (t = yt('suppressBrowserKeys')) && (At = t),
            console.log(' 1111111111111 suppressBrowserKeys > ' + At),
            0 == Rt
              ? (In.fakeMouseWithTouches = !1)
              : 1 == Rt && (In.fakeMouseWithTouches = !0),
            0 == At
              ? (In.suppressBrowserKeys = !1)
              : 1 == At && (In.suppressBrowserKeys = !0),
            (t = yt('expireOn')),
            console.log(' 1111111111111 expireOn > ' + Nt),
            t && t.endsWith('minutes'))
          ) {
            t = t.split('minutes')[0]
            var i = parseFloat(t)
            Number.isNaN(i) || (Nt = 60 * i * 1e3)
          } else (i = parseFloat(t)), Number.isNaN(i) || (Nt = i)
          console.log(' 222222222 expireOn > ' + Nt), ee()
        })(),
        no(),
        window.addEventListener('resize', Qn, !0),
        console.log('5555555555555555555  load()'),
        Qn(),
        (function () {
          document.addEventListener &&
            (document.addEventListener('webkitfullscreenchange', hn, !1),
            document.addEventListener('mozfullscreenchange', hn, !1),
            document.addEventListener('fullscreenchange', hn, !1),
            document.addEventListener('MSFullscreenChange', hn, !1)),
            window.addEventListener('resize', W, !0),
            window.addEventListener('orientationchange', t),
            console.log('5555555555555555555  load()'),
            window.addEventListener('message', k, !1),
            H(),
            null !==
              ($t = document.getElementById('quality-control-ownership-tgl')) &&
              ($t.onchange = function (e) {
                v()
              })
          let e = document.getElementById('overlayButton')
          null !== e &&
            (e.onclick = function (e) {
              !(function () {
                if (null != ct || 1 == pt) {
                  let e = document.getElementById('hostSettings')
                  'none' === e.style.display || '' === e.style.display
                    ? (e.style.display = 'block')
                    : (e.style.display = 'none')
                }
                if (null != dt) {
                  let e = document.getElementById('GuestSettings')
                  'none' === e.style.display || '' === e.style.display
                    ? (e.style.display = 'block')
                    : (e.style.display = 'none')
                }
                if (1 == yt('showPsControl')) {
                  let e = document.getElementById('overlayPSSettings')
                  'none' === e.style.display || '' === e.style.display
                    ? (e.style.display = 'block')
                    : 'block' === e.style.display && (e.style.display = 'none')
                } else
                  document.getElementById('overlayPSSettings').style.display =
                    'none'
                if (1 == yt('showWebrtcCtrlMenu')) {
                  let e = document.getElementById('overlayWebrtcCtrlMenu')
                  'none' === e.style.display || '' === e.style.display
                    ? (e.style.display = 'block')
                    : 'block' === e.style.display && (e.style.display = 'none')
                } else
                  document.getElementById(
                    'overlayWebrtcCtrlMenu'
                  ).style.display = 'none'
              })()
            })
          let n = document.getElementById('btnPasswordSubmit')
          null !== n &&
            (n.onclick = function (e) {
              e.preventDefault(),
                document.getElementById('PasswordToVerify').value ==
                Ce.passwordToStart
                  ? ((document.getElementById(
                      'popupForPasswordToStart'
                    ).style.display = 'none'),
                    (document.getElementById('videoPlayOverlay').style.display =
                      'flex'),
                    (document.getElementById('streamingVideo').style.display =
                      'block'),
                    ao())
                  : ((document.getElementById('alert__box').style.top = '50px'),
                    document
                      .getElementById('alert__close')
                      .addEventListener('click', (e) => {
                        e.preventDefault(),
                          (document.getElementById('alert__box').style.top =
                            '50px') &&
                            (document.getElementById('alert__box').style.top =
                              '-50%')
                      }))
            })
          let o = document.getElementById('btnPasswordCanecl')
          null !== o &&
            (o.onclick = function (e) {
              e.preventDefault(),
                (window.location = '/assets/pages/kickedOut.htm')
            })
          let i = document.getElementById('prioritise-quality-tgl'),
            a = document.getElementById('quality-params-submit')
          null !== i &&
            (i.onchange = function (e) {
              if (i.checked) {
                let e = {
                  PrioritiseQuality: 1,
                  LowBitrate: document.getElementById('low-bitrate-text').value,
                  HighBitrate:
                    document.getElementById('high-bitrate-text').value,
                  MinFPS: document.getElementById('min-fps-text').value
                }
                S(e),
                  console.log(e),
                  (a.onclick = function (e) {
                    let t = {
                      PrioritiseQuality: 1,
                      LowBitrate:
                        document.getElementById('low-bitrate-text').value,
                      HighBitrate:
                        document.getElementById('high-bitrate-text').value,
                      MinFPS: document.getElementById('min-fps-text').value
                    }
                    S(t), console.log(t)
                  })
              } else {
                let e = { PrioritiseQuality: 0 }
                S(e), console.log(e), (a.onclick = null)
              }
            })
          let l = document.getElementById('show-fps-button')
          null !== l &&
            (l.onclick = function (e) {
              E({ Console: 'stat fps' })
            })
          let s = document.getElementById('btn-Toggle-voipSpeaker-list')
          null !== s &&
            (s.onclick = function (e) {
              'none' != document.getElementById('roster').style.display
                ? ((document.getElementById('roster').style.display = 'none'),
                  (s.src = 'assets/images/voipListNO.png'))
                : ((document.getElementById('flow-meeting').style.display =
                    'block'),
                  (document.getElementById('roster').style.display = 'block'),
                  (s.src = 'assets/images/voipListYes.png'))
            })
          let r = document.getElementById('match-viewport-res-tgl')
          null !== r &&
            (r.onchange = function (e) {
              r.checked
            })
          let c = document.getElementById('show-stats-tgl')
          null !== c &&
            (c.onchange = function (e) {
              document.getElementById('statsContainer').style.display = e.target
                .checked
                ? 'block'
                : 'none'
            })
          var d = document.getElementById('kickAllGuests')
          d &&
            (d.onclick = function (e) {
              console.log('-> SS: kickAllGuests'),
                Ut.send(JSON.stringify({ type: 'kickAllGuests' }))
            })
          var u = document.getElementById('KickSelctedGuest')
          u &&
            (u.onclick = function (e) {
              console.log('-> SS: KickSelctedGuest')
              var t = document.getElementById('Guest-filter'),
                n = t.options[t.selectedIndex].value
              t.options[t.selectedIndex].text,
                Ut.send(
                  JSON.stringify({
                    type: 'KickSelctedGuest',
                    playerIDToKick: n
                  })
                )
            })
          var m = document.getElementById('DisableControlFromOthers')
          m &&
            (m.onclick = function (e) {
              console.log('-> SS: DisableControlFromOthers'),
                Ut.send(JSON.stringify({ type: 'DisableControlFromOthers' }))
            })
          var p = document.getElementById('GiveControlToThisGuest')
          p &&
            (p.onclick = function (e) {
              console.log('-> SS: GiveControlToThisGuest')
              var t = document.getElementById('Guest-filter'),
                n = t.options[t.selectedIndex].value
              t.options[t.selectedIndex].text,
                Ut.send(
                  JSON.stringify({
                    type: 'GiveControlToThisGuest',
                    GiveControlToThisGuestID: n
                  })
                )
            })
          let f = document.getElementById('BandwidthCap_params_submit')
          f &&
            (f.onclick = function (e) {
              yn(document.getElementById('BandwidthCap_text').value)
            })
          let y = document.getElementById('FramerateCap_params_submit')
          y &&
            (y.onclick = function (e) {
              vn(document.getElementById('FramerateCap_text').value)
            })
          const w = document.getElementById('restartWebRtcButton')
          w &&
            w.addEventListener('click', function () {
              ;(_ = 1), J()
            })
          let b = document.getElementById('ApplyBtn4setFramerateCap')
          b &&
            (b.onclick = function (e) {
              vn(document.getElementById('setFramerateCap').value)
            })
          var B = document.getElementById('settings-button')
          B &&
            (B.onclick = function (e) {
              if (
                (console.log('-> SS: settingsButton'),
                1 != yt('isE3DSEngineApp'))
              )
                return (
                  console.warn(
                    'Engine version below 4.26. so skipping settingsButton VideoEncoderQP -> : ' +
                      F
                  ),
                  void je(
                    'Engine version below 4.26. so skipping settingsButton VideoEncoderQP -> : ' +
                      F +
                      (Math.random() * (0.12 - 0.02) + 0.02).toFixed(4),
                    { timeout: 2e3, color: 'blue' }
                  )
                )
              !(function () {
                let e = document.getElementById('minBitrate').value,
                  t = document.getElementById('maxBitrate').value,
                  n = document.getElementById('resolution').value,
                  o =
                    (document.getElementById('minQP').value,
                    document.getElementById('rateCtrl').value),
                  i =
                    (document.getElementById('minFPS').value,
                    document.getElementById('backbuffersize').value,
                    document.getElementById('quality').value)
                var a = JSON.stringify({
                  type: 'settings',
                  data: {
                    quality: i,
                    minBitrate: e,
                    maxBitrate: t,
                    resolution: n,
                    rateCtrl: o
                  }
                })
                console.log('settingsButton--\x3e ' + a), Ut.send(a)
              })()
            })
          var I = document.getElementById('ApplyMaxSettingsBtn')
          I &&
            (I.onclick = function (e) {
              if (
                (console.log('-> SS: ApplyMaxSettingsBtn'),
                1 != yt('isE3DSEngineApp'))
              )
                return (
                  console.warn(
                    'Engine version below 4.26. so skipping settingsButton VideoEncoderQP -> : ' +
                      F
                  ),
                  void je(
                    'Engine version below 4.26. so skipping settingsButton VideoEncoderQP -> : ' +
                      F,
                    { timeout: 2e3, color: 'blue' }
                  )
                )
              var t = JSON.stringify({
                type: 'settings',
                data: {
                  minBitrate: 2e7,
                  maxBitrate: 5e7,
                  resolution: '1920x1080',
                  minQP: 1,
                  rateCtrl: 'CBR',
                  minFPS: 60,
                  backbuffersize: 1
                }
              })
              console.log('ApplyMaxSettingsBtn -> SS: ' + t), Ut.send(t)
            })
          var C = document.getElementById('ApplyMidSettingsBtn')
          C &&
            (C.onclick = function (e) {
              if (
                (console.log('-> SS: ApplyMidSettingsBtn'),
                1 != yt('isE3DSEngineApp'))
              )
                return (
                  console.error(
                    'Engine version below 4.26. so skipping ApplyMidSettingsBtn VideoEncoderQP -> : ' +
                      F
                  ),
                  void je(
                    'Engine version below 4.26. so skipping ApplyMidSettingsBtn VideoEncoderQP -> : ' +
                      F
                  )
                )
              var t = JSON.stringify({
                type: 'settings',
                data: {
                  minBitrate: 1e7,
                  maxBitrate: 25e6,
                  resolution: '1280x720',
                  minQP: 30,
                  rateCtrl: 'VBR',
                  minFPS: 60,
                  backbuffersize: 1
                }
              })
              console.log('ApplyMidSettingsBtn -> SS: ' + t), Ut.send(t)
            })
          var x = document.getElementById('ApplyMinSettingsBtn')
          x &&
            (x.onclick = function (e) {
              if (
                (console.log('-> SS: ApplyMinSettingsBtn'),
                1 != yt('isE3DSEngineApp'))
              )
                return (
                  console.warn(
                    'Engine version below 4.26. so skipping settingsButton VideoEncoderQP -> : ' +
                      F
                  ),
                  void je(
                    'Engine version below 4.26. so skipping settingsButton VideoEncoderQP -> : ' +
                      F,
                    { timeout: 2e3, color: 'blue' }
                  )
                )
              var t = JSON.stringify({
                type: 'settings',
                data: {
                  minBitrate: 4e6,
                  maxBitrate: 2e7,
                  resolution: '800x640',
                  minQP: 50,
                  rateCtrl: 'VBR',
                  minFPS: 60,
                  backbuffersize: 1
                }
              })
              console.log('ApplyMinSettingsBtn -> SS: ' + t), Ut.send(t)
            })
          let O = document.getElementById('ApplyBtn4setBandwidthCap')
          O &&
            (O.onclick = function (e) {
              yn(document.getElementById('setBandwidthCap').value)
            })
          let M = document.getElementById('ApplyBtn4Resulation')
          M &&
            (M.onclick = function (e) {
              h(
                document.getElementById('ResulationX').value,
                document.getElementById('ResulationY').value
              )
            })
          let D = document.getElementById('ApplyBtn4Resulation_r')
          if (
            (D &&
              (D.onclick = function (e) {
                !(function (e, t) {
                  let n = {
                    Console:
                      'r.setres ' +
                      document.getElementById('ResulationX_r').value +
                      'x' +
                      document.getElementById('ResulationY_r').value +
                      'w'
                  }
                  E(n), 1 == Ge && console.log(n)
                })()
              }),
            (muteaudio = document.getElementById('muteaudio')),
            null !== muteaudio &&
              (muteaudio.onchange = function (e) {
                Jt &&
                  Ut.send(
                    JSON.stringify({
                      type: 'settings',
                      mute: muteaudio.checked
                    })
                  )
              }),
            /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream)
          ) {
            let e = document.getElementById('fullscreen-img')
            e && (e.style.display = 'none')
          }
          let P = document.getElementById('fullscreen-img')
          P &&
            (P.onclick = function () {
              Sn()
            })
          let R = document.getElementById('screenshot-img')
          R &&
            (R.onclick = function () {
              kn()
            }),
            Tn('button_720p', 1280, 720),
            Tn('button_1080p', 1920, 1080),
            Tn('button_1440p', 2560, 1440),
            Tn('button_4K', 3840, 2160),
            Tn('button_8K', 7680, 4320)
          let A = document.getElementById('match-viewport-res-tgl')
          null !== A && A.checked
          let N = document.getElementById('ApplyBtn4setHighBitrate')
          N &&
            (N.onclick = function (e) {
              let t = document.getElementById('setHighBitrate').value
              capBpsCmd = 'Encoder.HighBitrate ' + t
              let n = { Console: capBpsCmd }
              E(n), console.log(n)
            })
          let L = document.getElementById('ApplyBtn4setMaxBitrate')
          L &&
            (L.onclick = function (e) {
              let t = document.getElementById('setMaxBitrate').value
              capBpsCmd = 'Encoder.MaxBitrate ' + t
              let n = { Console: capBpsCmd }
              E(n), console.log(n)
            })
          let U = document.getElementById('Volumebar')
          U &&
            (U.onchange = function (e) {
              g(this.value)
            })
          let q = document.getElementById('resoulbar')
          q &&
            (q.onchange = function (e) {
              var t
              ;(t = this.value),
                console.log('setQP val: ' + t),
                T({ ConsoleCommand: 'PixelStreaming.Encoder.MinQP ' + t }),
                T({ ConsoleCommand: 'PixelStreaming.Encoder.MaxQP ' + t })
            })
          let V = document.getElementById('ApplyBtn4setUseBackBufferSize')
          V &&
            (V.onclick = function (e) {
              let t = document.getElementById('setUseBackBufferSize').value
              capBpsCmd = 'Encoder.UseBackBufferSize ' + t
              let n = { Console: capBpsCmd }
              E(n), console.log(n)
            })
          let G = document.getElementById('ApplyBtn4setPrioritiseQuality')
          G &&
            (G.onclick = function (e) {
              let t = document.getElementById('setPrioritiseQuality').value
              capBpsCmd = 'Encoder.PrioritiseQuality ' + t
              let n = { Console: capBpsCmd }
              E(n), console.log(n)
            })
          let z = document.getElementById('ApplyBtn4setMinFPS')
          z &&
            (z.onclick = function (e) {
              let t = document.getElementById('setMinFPS').value
              capBpsCmd = 'Encoder.MinFPS ' + t
              let n = { Console: capBpsCmd }
              E(n), console.log(n)
            })
          let j = document.getElementById('ApplyBtn4setMinQP')
          j &&
            (j.onclick = function (e) {
              let t = document.getElementById('setMinQP').value
              capBpsCmd = 'Encoder.MinQP ' + t
              let n = { Console: capBpsCmd }
              E(n), console.log(n)
            })
          let X = document.getElementById('ApplyBtn4setLowBitrate')
          X &&
            (X.onclick = function (e) {
              let t = document.getElementById('setLowBitrate').value
              capBpsCmd = 'Encoder.LowBitrate ' + t
              let n = { Console: capBpsCmd }
              E(n), console.log(n)
            })
          let Q = document.getElementById('ApplyBtn4TargetSize')
          Q &&
            (Q.onclick = function (e) {
              let t = document.getElementById('TargetSizeX').value,
                n = document.getElementById('TargetSizeY').value
              capBpsCmd = 'Encoder.TargetSize ' + t + 'x' + n
              let o = { Console: capBpsCmd }
              E(o), console.log(o)
            })
          let Y = document.getElementById('ApplyBtn4setRateControl')
          Y &&
            (Y.onclick = function (e) {
              var t = document.getElementById('RateControlMethod'),
                n = t.options[t.selectedIndex].value
              t.options[t.selectedIndex].text,
                (capBpsCmd = 'Encoder.RateControl ' + n)
              let o = { Console: capBpsCmd }
              E(o), console.log(o)
            })
          let K = document.getElementById('encoder-params-submit')
          null !== K &&
            (K.onclick = function (e) {
              for (
                var t = tt.versionString.split('.'), n = [], o = 0;
                o < t.length;
                o++
              ) {
                var i = parseInt(t[o], 10)
                isNaN(i) || n.push(i)
              }
              console.log(n), n[0]
              let a = document.getElementById('encoder-min-qp-text').value,
                l = document.getElementById('encoder-max-qp-text').value
              T({ ConsoleCommand: 'PixelStreaming.Encoder.MinQP ' + a }),
                T({ ConsoleCommand: 'PixelStreaming.Encoder.MaxQP ' + l })
            })
          let Z = document.getElementById('webrtc-params-submit')
          null !== Z &&
            (Z.onclick = function (e) {
              ;($ = !1),
                h(
                  document.getElementById('webrtc-low-qp-text').value,
                  document.getElementById('webrtc-high-qp-text').value
                )
            }),
            'function' == typeof onHtmlBind
              ? onHtmlBind()
              : console.log('not found onHtmlBind'),
            e3ds_controller.callbacks &&
            'function' == typeof e3ds_controller.callbacks.onHtmlBind
              ? e3ds_controller.callbacks.onHtmlBind()
              : console.log('not found e3ds_controller.callbacks.onHtmlBind')
        })(),
        null != Ce.passwordToStart &&
        'undefined' != Ce.passwordToStart &&
        '' != Ce.passwordToStart
          ? (console.log(
              'streamingVideo: ',
              document.getElementById('streamingVideo').style.display
            ),
            console.log(
              'videoPlayOverlay: ',
              document.getElementById('videoPlayOverlay').style.display
            ),
            (document.getElementById('videoPlayOverlay').style.display =
              'none'),
            (document.getElementById('streamingVideo').style.display = 'none'),
            (i = document.getElementById('popupForPasswordToStart')) &&
              (i.style.display = 'flex'))
          : ((i = document.getElementById('popupForPasswordToStart')) &&
              (i.style.display = 'none'),
            ao()),
        console.log(
          'configurationObj for v5/v4/v6: ' + JSON.stringify(Ce, null, '\t')
        )
    }
  }
  function ao() {
    !(function () {
      if ((console.log('videoToPlay: ' + Qe), Qe.length > 0)) {
        var e = document.getElementById('streamingVideo')
        if (e) {
          je('Click in the video to enable audio', {
            color: 'blue',
            timeout: 1e4
          }),
            e.addEventListener('ended', (e) => {
              console.log(
                'Video stopped either because 1) it was over, or 2) no further data is available.'
              ),
                (function () {
                  if (1 == yt('DoRandomSuffleInLoadingVideoAssets')) {
                    var e =
                      ((t = Qe.length), Math.floor(Math.random() * (t - 0)) + 0)
                    Zn((eo = e))
                  } else ++eo == Qe.length ? Zn((eo = 0)) : Zn(eo)
                  var t
                })()
            }),
            Zn(0)
          var t = document.getElementById('e3ds_draggable')
          t &&
            (1 == Ce.shouldDisplayContorlBar ||
            null == Ce.shouldDisplayContorlBar
              ? (t.style.display = 'block')
              : (t.style.display = 'none'))
        }
      }
    })(),
      Kn()
  }
  var lo = void 0
  function so() {
    'use strict'
    if (Ze) {
      if (!Bt) {
        var e = document.getElementById('InQueue_Text')
        if (
          (e && (e.innerHTML = 'Requesting Available Slot'),
          (window.WebSocket = window.WebSocket || window.MozWebSocket),
          window.WebSocket)
        ) {
          var t = Je.replace('http://', 'ws://').replace('https://', 'wss://')
          ;((qn = new WebSocket(t)).onerror = function (e) {
            console.error(`ws4queue error: ${JSON.stringify(e)}`)
          }),
            (qn.onclose = function (e) {
              console.warn(
                `ws4queue closed: ${JSON.stringify(e.code)} - ${e.reason}`
              ),
                Et &&
                  !Ye &&
                  ((Gn += 1),
                  console.log('ws4queueReconnec() reconnectAttempt:' + Gn),
                  (qn = void 0),
                  setTimeout(so(), 4e3))
            }),
            (qn.onopen = function (e) {
              var t
              'v5' == _e || 'v6' == _e
                ? (null != Ce && io(),
                  null != dt
                    ? ro()
                    : ((t = JSON.stringify({
                        type: 'getAppCOnfig',
                        GuestMeetingId: dt,
                        appName: ut,
                        owner: Se,
                        configName: gt,
                        version: we,
                        configurationObj: Ce,
                        urlVersion: _e
                      })),
                      console.log(' ws.send(): ' + t),
                      Xe(t, qn)))
                : io()
            }),
            (qn.onmessage = function (e) {
              console.log(`<- SS: ${e.data}`)
              var t = JSON.parse(e.data)
              if ('disconnectAndretryIn' === t.type) {
                var n = document.getElementById('InQueue_Text')
                n &&
                  (n.innerHTML = 'CCU Limit Reached. Trying Again in 10 sec'),
                  (Bt = !1),
                  (Et = !1),
                  qn.close(),
                  clearInterval(Vn),
                  (Vn = setInterval(function () {
                    window.location.reload()
                  }, 1e4))
              } else
                'ShowThisHtmlPage' === t.type
                  ? ((Bt = !0), qn.close(), (self.location = t.htmlPage))
                  : 'AppCOnfig' === t.type ||
                      'CallOnGettingAppCOnfig' === t.type
                    ? io(t)
                    : 'TakeuserDeviceInfo' === t.type
                      ? ((zt = t.userDeviceInfo),
                        console.log(`userDeviceInfo : ${JSON.stringify(zt)}`),
                        console.log(' 1111111111111 useExtendedTyping > ' + vt))
                      : 'sendIdentity' === t.type
                        ? Kn()
                        : 'doApprequest' === t.type
                          ? ro()
                          : 'ConnectPlayerTo' === t.type
                            ? ((Ye = !0),
                              (he = t.appDownloadInfo),
                              p({ type: 'stage2_deQueued' }),
                              console.log(
                                '222222 <- SS_Queue: msg: ' + JSON.stringify(t)
                              ),
                              (zn = !1),
                              (Ze = !1),
                              qn && qn.close(),
                              console.log(
                                "extractValueFromUrl('videoToPlay') :" + Qe
                              ),
                              Qe.length <= 0 && Hn(1),
                              ce((lo = t.cirrusServer)))
                            : 'redirectTo11' === t.type
                              ? (p({ type: 'stage2_deQueued' }),
                                console.log(
                                  '222222 <- SS_Queue: msg.data.url: ' + t.url
                                ),
                                console.log(
                                  '222222 <- SS_Queue: msg: ' +
                                    JSON.stringify(t)
                                ),
                                ce(t.cirrusServer))
                              : 'UpdatePlayerWatingRank' === t.type
                                ? (console.log(
                                    '1111111111111111111111 <- SS_Queue: UpdatePlayerWatingRank: ' +
                                      t.Postion
                                  ),
                                  Qe.length <= 0 &&
                                    (function (e, t, n) {
                                      var o =
                                          document.getElementById(
                                            'queueNumberText'
                                          ),
                                        i = '',
                                        a =
                                          document.getElementById(
                                            'InQueue_Text'
                                          )
                                      a && (a.innerHTML = 'In Queue'),
                                        o &&
                                          ((o.innerHTML = t),
                                          console.log(
                                            'queueNumberText.innerHTM : ' + i
                                          )),
                                        p({
                                          type: 'QueueNumberUpdated',
                                          queuePosition: t
                                        })
                                    })(0, t.Postion))
                                : 'ShowAnimatedInfo' === t.type
                                  ? Ln(t.data.info)
                                  : 'showTextOverlay' === t.type
                                    ? (console.log(
                                        'showTextOverlay: ' + t.data.info
                                      ),
                                      je(t.data.info, { color: 'blue' }))
                                    : 'printInConsoleOnly' === t.type
                                      ? console.log(
                                          'printInConsoleOnly: ' + t.data.info
                                        )
                                      : 'ShowInfoInLines' === t.type &&
                                        (je(t.data.info, { color: 'blue' }),
                                        console.log(
                                          'ShowInfoInLines: ' + t.data.info
                                        ))
            })
        } else alert("Your browser doesn't support WebSocket")
      }
    } else
      console.log(
        'onTrailCheckPassed() returninig bcz shouldTryToReconnectQueue: ' + Ze
      )
  }
  function ne() {
    if (oe) {
      if (It)
        document.exitFullscreen
          ? document.exitFullscreen()
          : document.mozCancelFullScreen
            ? document.mozCancelFullScreen()
            : document.webkitExitFullscreen
              ? document.webkitExitFullscreen()
              : document.msExitFullscreen && document.msExitFullscreen(),
          (It = !1)
      else {
        let e = document.documentElement
        e.requestFullscreen
          ? e.requestFullscreen()
          : e.mozRequestFullScreen
            ? e.mozRequestFullScreen()
            : e.webkitRequestFullscreen
              ? e.webkitRequestFullscreen()
              : e.msRequestFullscreen && e.msRequestFullscreen(),
          screen.orientation.lock('landscape'),
          (It = !0)
      }
      clearInterval(Vt), clearTimeout(Gt), (oe = !1)
    }
  }
  function ro() {
    if (qn && qn.readyState === Ht) {
      if (null == wt)
        return (
          console.log('trying to doApprequest but clientInfo undefined'),
          void mo()
        )
      console.log('doing doApprequest')
      var e = void 0,
        t = 'appRequest'
      null != dt && (t = 'RequestToJoinMeeting'),
        null != Ce
          ? (e = {
              type: t,
              clientInfo: wt,
              configName: gt,
              GuestMeetingId: dt,
              accessedTopLevelDomainName: qe,
              url_searchParams: String(We),
              configurationStr: Fe[2],
              userDeviceInfo: zt,
              configuration: Ce,
              expireOn: Ce.expireOn,
              MouseControlScheme: Ce.MouseControlScheme,
              showWebrtcCtrlMenu: Ce.showWebrtcCtrlMenu,
              showPsControl: Ce.showPsControl,
              afkWarnTimeout: Ce.afkWarnTimeout,
              afkCloseTimeout: Ce.afkCloseTimeout,
              isAfkEnabled: Ce.isAfkEnabled,
              enableScreenshot: Ce.enableScreenshot,
              useExtendedTyping: Ce.useExtendedTyping,
              showbrowserMouse: Ce.showbrowserMouse,
              isAdminDebugging: Ce.isAdminDebugging,
              appName: Ce.appName,
              owner: Se,
              cmdLineArgs: Ce.exeLunchArgs,
              exeLunchArgs: Ce.exeLunchArgs,
              hostMeetingId: Ce.hostMeetingId,
              GuestMeetingId: dt,
              maxUserLimit: Ce.maxUserLimit,
              custom_html: Ce.custom_html
            })
          : (Je.replace(location.origin + '/', '').replace(location.search, ''),
            (e = {
              type: 'appRequest',
              appName: yt('appName'),
              owner: Se,
              configName: gt,
              clientInfo: wt,
              cmdLineArgs: yt('cmdLineArgs'),
              hostMeetingId: yt('hostMeetingId'),
              GuestMeetingId: dt,
              custom_html: yt('custom_html'),
              onDemand: yt('onDemand'),
              onDemandRegion: yt('onDemandRegion'),
              maxUserLimit: yt('maxUserLimit'),
              accessedTopLevelDomainName: qe,
              url_searchParams: String(We)
            }))
      var n = JSON.stringify(e)
      console.log('--------------- ws4queue.send Json: ' + n), qn.send(n)
    } else console.log('ws4queue not ready')
  }
  function C(e) {
    ;(null != wt && 'undefined' != wt) || uo(JSON.parse(e))
  }
  function co(e) {
    return Math.floor(Math.random() * e)
  }
  function uo(e) {
    null == e.latitude &&
      ((e.latitude = '38.88'),
      console.warn('latitude undefined .so setting latitude : ' + e.latitude)),
      null == e.longitude &&
        ((e.longitude = '-120.88'),
        console.warn(
          'longitude undefined .so setting longitude : ' + e.longitude
        )),
      (wt = {
        ip: e.ip,
        city: e.city,
        region: e.region_name,
        country_name: e.country,
        latitude: e.latitude,
        longitude: e.longitude,
        fullInfo: e
      }),
      no(),
      (function (e, t) {
        let n = new XMLHttpRequest()
        ;(n.onreadystatechange = function (i) {
          if (4 == n.readyState && 200 == n.status) {
            if (n.responseText.includes('fr-turn'))
              return void (function (e, t) {
                let n = new XMLHttpRequest()
                n.onreadystatechange = function (e) {
                  if (4 == n.readyState && 200 == n.status) {
                    JSON.parse(n.responseText)
                    var t = JSON.parse(n.responseText),
                      i = {}
                    i.iceServers = t.StaticTURN.iceServers[1]
                    var a = {}
                    ;(a.v = i),
                      (a.s = 'ok'),
                      o(
                        JSON.stringify({
                          type: 'xirsysResponse',
                          responseText: JSON.stringify(a)
                        })
                      )
                  }
                }
                var i =
                  'https://' +
                  window.location.hostname +
                  '/findNearestXirsysTurnServer/' +
                  e +
                  '/' +
                  t
                console.log('xirysEmulated url: ' + i),
                  n.open('GET', i, !0),
                  n.send(JSON.stringify({ format: 'urls' }))
              })(e, t)
            'error' == JSON.parse(n.responseText).s &&
              it(
                'invalid xirsys xhr.responseText: ' +
                  n.responseText +
                  '  -- >xirsysApiEndpoint : ' +
                  De,
                -881818782
              ),
              o(
                JSON.stringify({
                  type: 'xirsysResponse',
                  responseText: n.responseText
                })
              )
          }
        }),
          n.open('PUT', De, !0),
          n.setRequestHeader(
            'Authorization',
            'Basic ' +
              btoa('eagle3dstreaming:c280e804-72d9-11eb-8e31-0242ac150006')
          ),
          n.setRequestHeader('Content-Type', 'application/json'),
          n.send(JSON.stringify({ format: 'urls' }))
      })(wt.latitude, wt.longitude),
      e.city,
      co(3333),
      Yn(),
      qn && qn.readyState === Ht && ro()
  }
  function go() {
    uo({
      ip: 'ahsanHackOnUnabletoGetIpInfo',
      city: 'ahsanHackOnUnabletoGetIpInfo',
      region: 'ahsanHackOnUnabletoGetIpInfo',
      country_name: 'ahsanHackOnUnabletoGetIpInfo',
      latitude: void 0,
      longitude: void 0
    })
  }
  function mo(e = 0) {
    if (void 0 !== wt) return
    const t = new XMLHttpRequest()
    ;(t.onreadystatechange = function () {
      return 422 === t.status
        ? (console.log(
            'collectLocationInfo() received 422 status code. Returning default clientInfo object.'
          ),
          void go())
        : 429 === t.status
          ? (console.log(
              'collectLocationInfo() received 429 status code. Retrying after 2000ms.'
            ),
            null != I && clearTimeout(I),
            void (I = setTimeout(mo, 2e3, e)))
          : void ('' !== t.responseText &&
            void 0 !== t.responseText &&
            200 === t.status
              ? (clearTimeout(I), C(t.responseText))
              : e < 20
                ? (console.log('CLI() retrying after 2000ms.'),
                  null != I && clearTimeout(I),
                  (I = setTimeout(mo, 2e3, e + 1)))
                : (console.log(
                    'collectLocationInfo() maximum retries exceeded.'
                  ),
                  go()))
    }),
      t.open(
        'GET',
        'https://ipgeolocation.abstractapi.com/v1/?api_key=667cb95019b04ea5beaa7c935dc5ce37',
        !0
      ),
      t.send(null)
  }
  ;(oe = !1),
    (Number.prototype.clamp = function (e, t) {
      return Math.min(Math.max(this, e), t)
    }),
    (I = void 0),
    (B = 0),
    mo(),
    document.addEventListener('DOMContentLoaded', function () {
      var e = document.querySelector('.slider-toggler'),
        t = document.querySelector('.slider-content'),
        n = document.querySelector('.toggle-img-collapsed'),
        o = document.querySelector('.toggle-img-expanded')
      e &&
        (e.addEventListener('click', function () {
          '0px' === t.style.width || '' === t.style.width
            ? (t.style.width = 'auto')
            : (t.style.width = '0px'),
            (n.style.display = 'none' === n.style.display ? 'block' : 'none'),
            (o.style.display = 'none' === o.style.display ? 'block' : 'none')
        }),
        e.click())
    })
})()
